{"version":3,"file":"component---src-pages-index-tsx-fe42df071f02e2160836.js","mappings":"wOA4EA,UA3DkBA,IAAwC,IAAvC,KAAEC,EAAI,SAAEC,GAA0BF,EAEnD,MAAMG,GAAQC,EAAAA,EAAAA,GAAWH,EAAKI,OAAQJ,EAAKK,UAAWL,EAAKM,SAE3D,OAAqB,IAAjBJ,EAAMK,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACR,SAAUA,GAChBO,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACC,EAAAA,EAAM,CAACR,SAAUA,GAChBO,EAAAA,cAAA,MAAIE,MAAO,CAAEC,UAAW,SACrBT,EAAMU,KAAIC,IACT,MAAMC,EAAQD,EAAKC,OAASD,EAAKE,KAEjC,OACEP,EAAAA,cAAA,MAAIQ,IAAKH,EAAKE,MACZP,EAAAA,cAAA,WACES,UAAU,iBACVC,WAAS,EACTC,SAAS,8BAETX,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAIR,EAAKE,KAAMO,SAAS,OAC5Bd,EAAAA,cAAA,QAAMc,SAAS,YAAYR,KAG/BN,EAAAA,cAAA,OAAKE,MAAO,CAAEa,UAAW,UAAWf,EAAAA,cAAA,aAClCA,EAAAA,cAAA,YAAOK,EAAKW,SAGhBhB,EAAAA,cAAA,oBAC+B,IAArBK,EAAKY,aACXjB,EAAAA,cAACkB,EAAAA,EAAW,CAACC,IAAKd,EAAKe,QAASC,MAAOhB,EAAKY,cAE9CjB,EAAAA,cAAA,KACEsB,wBAAyB,CACvBC,OAAQlB,EAAKmB,aAAenB,EAAKoB,SAEnCX,SAAS,kBAIZ,KAIJ,EAWN,MAAMY,EAAOA,IAAM1B,EAAAA,cAAC2B,EAAAA,EAAG,CAACrB,MAAM,a,oCClDrC,IA/BA,SAAoBV,EAAgBC,EAAsBC,GACxD,IAAI8B,EAAyD,CAAC,EAC9D9B,GAAWA,EAAQ+B,MAAMC,SAAQC,IAC/BH,EAAkBG,EAAKA,KAAKC,cAAgBD,EAAKA,KAAKE,gBAAgBC,eAAe,IAEvF,MAAMC,EAAWvC,EAAOwC,MAClBC,EAAUxC,EAAUuC,MAsB1B,OArBcD,EAAS/B,KAAIC,IACD,CACtBC,MAAOD,EAAKiC,YAAYhC,MACxBmB,QAASpB,EAAKoB,QACdlB,KAAMF,EAAKkC,OAAOhC,KAClBS,KAAMX,EAAKiC,YAAYtB,KACvBQ,YAAanB,EAAKiC,YAAYd,YAC9BJ,QAASf,EAAKiC,YAAYE,kBAC1BvB,aAAawB,EAAAA,EAAAA,GAASb,EAAkBvB,EAAKiC,YAAYE,mBAAqB,sCAG/EE,OAAOL,EAAQjC,KAAIC,IAAS,IAADsC,EAAAC,EAC5B,MAAO,CACLtC,MAAOD,EAAKC,MACZmB,QAASpB,EAAKoB,QACdlB,KAAM,IAAMF,EAAKE,KACjBS,KAAMX,EAAKW,KACXI,SAA2B,QAAlBuB,EAAAtC,EAAKwC,qBAAa,IAAAF,OAAA,EAAlBA,EAAoBZ,KAAKX,UAAW,GAC7CH,aAA+B,QAAlB2B,EAAAvC,EAAKwC,qBAAa,IAAAD,OAAA,EAAlBA,EAAoBb,KAAKd,eAAewB,EAAAA,EAAAA,GAASb,EAAkB,kCACjF,IAGL,C","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx","webpack://gatsby-starter-blog/./src/utilFunction.ts"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport mergePosts from \"../utilFunction\"\r\n\r\ntype BlogIndexProps = {\r\n  data: {\r\n    allMdx: AllMdx\r\n    allWpPost: AllWpPost\r\n    allFile: AllFile\r\n  }\r\n  location: Location\r\n}\r\n\r\nconst BlogIndex = ({ data, location }: BlogIndexProps) => {\r\n\r\n  const posts = mergePosts(data.allMdx, data.allWpPost, data.allFile)\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location}>\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.title || post.slug\r\n\r\n          return (\r\n            <li key={post.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"https://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <div style={{ textAlign: \"right\" }}><small>\r\n                    <time>{post.date}</time>\r\n                  </small></div>\r\n                </header>\r\n                <section>\r\n                  {typeof post.gatsbyImage === \"undefined\" ||\r\n                    <GatsbyImage alt={post.altText} image={post.gatsbyImage} />\r\n                  }\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allMdx(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY/MM/DD\")\r\n          description\r\n          featuredImagePath\r\n        }\r\n      }\r\n    }\r\n    allWpPost(sort: { date: DESC }) {\r\n      nodes {\r\n        title\r\n        excerpt\r\n        slug\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        featuredImage{\r\n          node{\r\n            altText\r\n            gatsbyImage(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nfunction mergePosts(allMdx: AllMdx, allWpPost: AllWpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  const mdxPosts = allMdx.nodes\r\n  const wpPosts = allWpPost.nodes\r\n  const posts = mdxPosts.map(post => {\r\n    const mdx: CommonPost = {\r\n      title: post.frontmatter.title,\r\n      excerpt: post.excerpt,\r\n      slug: post.fields.slug,\r\n      date: post.frontmatter.date,\r\n      description: post.frontmatter.description,\r\n      altText: post.frontmatter.featuredImagePath,\r\n      gatsbyImage: getImage(allFeaturedImages[post.frontmatter.featuredImagePath || \"featured/defaultThumbnail.png\"])\r\n    }\r\n    return mdx\r\n  }).concat(wpPosts.map(post => {\r\n    return {\r\n      title: post.title,\r\n      excerpt: post.excerpt,\r\n      slug: \"/\" + post.slug,\r\n      date: post.date,\r\n      altText: post.featuredImage?.node.altText || \"\",\r\n      gatsbyImage: post.featuredImage?.node.gatsbyImage || getImage(allFeaturedImages[\"featured/defaultThumbnail.png\"])\r\n    }\r\n  }))\r\n  return posts as CommonPost[]\r\n}\r\n\r\nexport default mergePosts"],"names":["_ref","data","location","posts","mergePosts","allMdx","allWpPost","allFile","length","React","Layout","style","listStyle","map","post","title","slug","key","className","itemScope","itemType","Link","to","itemProp","textAlign","date","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo","allFeaturedImages","edges","forEach","node","relativePath","childImageSharp","gatsbyImageData","mdxPosts","nodes","wpPosts","frontmatter","fields","featuredImagePath","getImage","concat","_post$featuredImage","_post$featuredImage2","featuredImage"],"sourceRoot":""}