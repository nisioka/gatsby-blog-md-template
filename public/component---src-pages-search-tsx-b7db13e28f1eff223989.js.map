{"version":3,"file":"component---src-pages-search-tsx-b7db13e28f1eff223989.js","mappings":"qMAqGA,UA7FeA,IAAyD,IAAxD,KAAEC,EAAI,SAAEC,GAA2CF,EACjE,MAAMG,GAAQC,EAAAA,EAAAA,IAAWH,EAAKI,OAAQJ,EAAKK,UAAWL,EAAKM,UAErD,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,aAAc,GACdC,MAAO,KAiCT,MAAM,aAAED,EAAY,MAAEC,GAAUJ,EAEhC,OACEK,EAAAA,cAACC,EAAAA,EAAM,CAACZ,SAAUA,GACdW,EAAAA,cAAA,SACEE,KAAK,OACL,aAAW,SACXC,YAAY,cACZC,SAzBR,SAA2BC,GACzB,MAAMC,EAAaD,EAAME,OAAOC,MAAMC,cAAcC,MAAM,OAEpDZ,EAAeR,EAAMqB,QAAOC,IAChC,IAAK,MAAMC,KAAQP,EAAY,KAAAQ,EAC7B,KAAKF,EAAKG,MAAMN,cAAcO,SAASH,IAA0B,QAAjBC,EAACF,EAAKK,mBAAW,IAAAH,GAAhBA,EAAkBL,cAAcO,SAASH,IACxF,OAAO,CAEX,CACA,OAAO,CAAI,IAEbjB,EAAS,CACPE,eACAC,MAAOO,EAAWY,KAAK,MAE3B,IAYMlB,EAAAA,cAAA,OAAKmB,UAAU,qBACF,KAAVpB,EACCA,EAAQ,WAAaD,EAAasB,OAAS,IACzCtB,EAAasB,OAAS,aAG5BpB,EAAAA,cAACqB,EAAAA,GAAkB,KACjBrB,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAIF,EAAasB,OAAO,YAE1BpB,EAAAA,cAACsB,EAAAA,GAA0B,KACxBxB,EAAayB,KAAIX,GAEdZ,EAAAA,cAAA,MAAIwB,IAAKZ,EAAKa,MACZzB,EAAAA,cAAA,WACEmB,UAAU,iBACVO,SAAS,6BAET1B,EAAAA,cAAC2B,EAAAA,KAAI,CAACC,GAAE,KAAMC,EAAAA,EAAAA,IAAgBjB,EAAKkB,UAAS,IAAIlB,EAAKa,MACnDzB,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAOY,EAAKG,QAEdf,EAAAA,cAAA,eACEA,EAAAA,cAAA,WAAKA,EAAAA,cAAA,aACHA,EAAAA,cAAA,YAAOY,EAAKmB,QAEd/B,EAAAA,cAAA,OAAKmB,UAAU,kBACgB,IAArBP,EAAKoB,aACXhC,EAAAA,cAACiC,EAAAA,EAAW,CAACC,IAAKtB,EAAKuB,QAASC,MAAOxB,EAAKoB,YAAab,UAAU,eAGvEnB,EAAAA,cAAA,KACEqC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,kBASnD,C,8GC/FN,MAAMlB,EAAqBmB,EAAAA,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qNAelCrB,EAA6BkB,EAAAA,GAAOI,GAAEC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,u6BA0DlBH,EAAAA,GAAOM,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oC","sources":["webpack://gatsby-starter-blog/./src/pages/search.tsx","webpack://gatsby-starter-blog/./src/style.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport { convertCategory, mergePosts } from \"../utilFunction\"\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { ContentsListHeader, ContentsOrderedListWrapper } from \"../style\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n\r\nconst Search = ({ data, location }: {data: any, location: Location}) => {\r\n  const posts = mergePosts(data.allMdx, data.allWpPost, data.allFile)\r\n\r\n  const [state, setState] = useState({\r\n    filteredData: [] as CommonPost[],\r\n    query: \"\",\r\n  })\r\n  // const [urlParam, setUrlParam] = useState('');\r\n  // const navigate = useNavigate();\r\n  //\r\n  // useEffect(() => {\r\n  //   // ユーザーの入力があるたびにURLのクエリパラメータを更新\r\n  //   const params = new URLSearchParams();\r\n  //   if (query) {\r\n  //     params.append('q', query);\r\n  //   } else {\r\n  //     params.delete('q');\r\n  //   }\r\n  //   navigate(`?${params.toString()}`, { replace: true });\r\n  // }, [urlParam, navigate]);\r\n\r\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const queryWords = event.target.value.toLowerCase().split(/\\s+/)\r\n\r\n    const filteredData = posts.filter(post => {\r\n      for (const word of queryWords) {\r\n        if (!post.title.toLowerCase().includes(word) && !post.description?.toLowerCase().includes(word)) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    })\r\n    setState({\r\n      filteredData,\r\n      query: queryWords.join(\" \")\r\n    })\r\n  }\r\n\r\n  const { filteredData, query } = state\r\n\r\n  return (\r\n    <Layout location={location}>\r\n        <input\r\n          type=\"text\"\r\n          aria-label=\"Search\"\r\n          placeholder=\"検索ワードを入力...\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <div className=\"result-inner__res\">\r\n          {query !== \"\" ?\r\n            query + \" の検索結果: \" + filteredData.length + \"件\"\r\n            : filteredData.length + \"件の記事があります\"\r\n          }\r\n        </div>\r\n        <ContentsListHeader>\r\n          <h1>サイト内検索</h1>\r\n          <p>{filteredData.length} 記事あります</p>\r\n        </ContentsListHeader>\r\n        <ContentsOrderedListWrapper>\r\n          {filteredData.map(post => {\r\n            return (\r\n              <li key={post.slug}>\r\n                <article\r\n                  className=\"post-list-item\"\r\n                  itemType=\"http://schema.org/Article\"\r\n                >\r\n                  <Link to={`/${convertCategory(post.category)}/${post.slug}`}>\r\n                    <h2>\r\n                      <span>{post.title}</span>\r\n                    </h2>\r\n                    <section>\r\n                      <div><small>\r\n                        <time>{post.date}</time>\r\n                      </small></div>\r\n                      <div className=\"thumbnail\">\r\n                        {typeof post.gatsbyImage === \"undefined\" ||\r\n                          <GatsbyImage alt={post.altText} image={post.gatsbyImage} className=\"thumbnail\" />\r\n                        }\r\n                      </div>\r\n                      <p\r\n                        dangerouslySetInnerHTML={{ __html: post.excerpt }}\r\n                      />\r\n                    </section>\r\n                  </Link>\r\n                </article>\r\n              </li>\r\n            )\r\n          })}\r\n        </ContentsOrderedListWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Search\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMdx {\r\n      nodes {\r\n        body\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY/MM/DD\")\r\n          description\r\n          featuredImagePath\r\n          category\r\n        }\r\n      }\r\n    }\r\n    allWpPost {\r\n      nodes {\r\n        title\r\n        content\r\n        slug\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        featuredImage{\r\n          node{\r\n            altText\r\n            gatsbyImage(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n        categories {\r\n          nodes {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `","import styled from \"styled-components\"\r\n\r\nexport const ContentsListHeader = styled.header`\r\n  text-align: center;\r\n\r\n  h1, h2 {\r\n    &:after {\r\n      margin: 0 auto;\r\n      content: '';\r\n      display: block;\r\n      width: 98%;\r\n      height: 3px;\r\n      background: var(--orange);\r\n    }\r\n  }\r\n`\r\n\r\nexport const ContentsOrderedListWrapper = styled.ol`\r\n  column-count: 1;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0 -15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: var(--maxWidth-full);\r\n\r\n  li {\r\n    padding: 5px;\r\n    margin: var(--spacing-1) ;\r\n    box-sizing: border-box;\r\n    border: 1px solid var(--black);\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n\r\n    a {\r\n      color: var(--black);\r\n      text-decoration: none;\r\n    }\r\n\r\n    h2 {\r\n      font-size: var(--fontSize-2);\r\n    }\r\n  }\r\n  .thumbnail {\r\n    float: left;\r\n  }\r\n\r\n  @media screen and (min-width: calc(512px + 160px)) {\r\n    column-count: 2;\r\n\r\n    li {\r\n      padding: 15px;\r\n      width: 48%;\r\n\r\n      h2 {\r\n        font-size: var(--fontSize-3);\r\n      }\r\n\r\n      a {\r\n        &:hover h2 {\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: calc(768px + 330px)) {\r\n    column-count: 3;\r\n\r\n    li {\r\n      width: 32%;\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport const NormalAreaWrapper = styled.div`\r\n  background-color: #fff;\r\n`"],"names":["_ref","data","location","posts","mergePosts","allMdx","allWpPost","allFile","state","setState","useState","filteredData","query","React","Layout","type","placeholder","onChange","event","queryWords","target","value","toLowerCase","split","filter","post","word","_post$description","title","includes","description","join","className","length","ContentsListHeader","ContentsOrderedListWrapper","map","key","slug","itemType","Link","to","convertCategory","category","date","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","excerpt","styled","header","_templateObject","_taggedTemplateLiteralLoose","ol","_templateObject2","div","_templateObject3"],"sourceRoot":""}