{"version":3,"file":"component---src-templates-category-list-tsx-41233c8e532aca9565d6.js","mappings":"kNAEO,MAAMA,EAAqBC,EAAAA,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iNAelCC,EAA6BJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,62B,sGCmDnD,UA1DqBI,IAAgG,IAA/F,YAAEC,EAAW,KAAEC,EAAI,SAAEC,GAAqEH,EAC9G,MAAMI,EAAeH,EAAYI,SAC3BC,GAAQC,EAAAA,EAAAA,GAAWL,EAAKM,OAAQN,EAAKO,UAAWP,EAAKQ,SACrDC,EAAQ,IAAIP,EAAY,YAE9B,OAAqB,IAAjBE,EAAMM,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACX,SAAUA,GAChBU,EAAAA,cAACE,EAAAA,EAAG,CAACJ,MAAOA,IACZE,EAAAA,cAAA,SAAG,sBAQPA,EAAAA,cAACC,EAAAA,EAAM,CAACX,SAAUA,GAChBU,EAAAA,cAACE,EAAAA,EAAG,CAACJ,MAAOA,IACZE,EAAAA,cAACrB,EAAAA,EAAkB,KACjBqB,EAAAA,cAAA,UAAKF,GACLE,EAAAA,cAAA,SAAIP,EAAMM,OAAO,YAEnBC,EAAAA,cAAChB,EAAAA,EAA0B,KACxBS,EAAMU,KAAIC,GAEPJ,EAAAA,cAAA,MAAIK,IAAKD,EAAKE,MACZN,EAAAA,cAAA,WACEO,UAAU,iBACVC,SAAS,6BAETR,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAIN,EAAKE,KAAMC,UAAU,QAC7BP,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAOI,EAAKN,QAEdE,EAAAA,cAAA,eACEA,EAAAA,cAAA,WAAKA,EAAAA,cAAA,aACHA,EAAAA,cAAA,YAAOI,EAAKO,QAEdX,EAAAA,cAAA,OAAKO,UAAU,kBACgB,IAArBH,EAAKQ,aACXZ,EAAAA,cAACa,EAAAA,EAAW,CAACC,IAAKV,EAAKW,QAASC,MAAOZ,EAAKQ,YAAaL,UAAU,eAGvEP,EAAAA,cAAA,KACEiB,wBAAyB,CAAEC,OAAQd,EAAKe,kBASjD,C,oCC9Bb,IAhCA,SAAoBxB,EAAgBC,EAAsBC,GACxD,IAAIuB,EAAyD,CAAC,EAC9DvB,GAAWA,EAAQwB,MAAMC,SAAQC,IAC/BH,EAAkBG,EAAKA,KAAKC,cAAgBD,EAAKA,KAAKE,gBAAgBC,eAAe,IAEvF,MAAMC,EAAWhC,EAAOiC,MAClBC,EAAUjC,EAAUgC,MAuB1B,OAtBcD,EAASxB,KAAIC,IACD,CACtBN,MAAOM,EAAK0B,YAAYhC,MACxBqB,QAASf,EAAKe,QACdb,KAAMF,EAAK2B,OAAOzB,KAClBK,KAAMP,EAAK0B,YAAYnB,KACvBqB,YAAa5B,EAAK0B,YAAYE,YAC9BjB,QAASX,EAAK0B,YAAYG,kBAC1BrB,aAAasB,EAAAA,EAAAA,GAASd,EAAkBhB,EAAK0B,YAAYG,mBAAqB,sCAG/EE,OAAON,EAAQ1B,KAAIC,IAAS,IAADgC,EAAAC,EAC5B,MAAO,CACLvC,MAAOM,EAAKN,MACZqB,QAASf,EAAKe,QACdb,KAAM,IAAMF,EAAKE,KACjBK,KAAMP,EAAKO,KACXI,SAA2B,QAAlBqB,EAAAhC,EAAKkC,qBAAa,IAAAF,OAAA,EAAlBA,EAAoBb,KAAKR,UAAW,GAC7CH,aAA+B,QAAlByB,EAAAjC,EAAKkC,qBAAa,IAAAD,OAAA,EAAlBA,EAAoBd,KAAKX,eAAesB,EAAAA,EAAAA,GAASd,EAAkB,kCACjF,KACCmB,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAE9B,MAAMgC,UAAY,IAAID,KAAKF,EAAE7B,MAAMgC,WAGnE,C","sources":["webpack://gatsby-starter-blog/./src/style.tsx","webpack://gatsby-starter-blog/./src/templates/category-list.tsx","webpack://gatsby-starter-blog/./src/utilFunction.ts"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const ContentsListHeader = styled.header`\r\n  text-align: center;\r\n\r\n  h1 {\r\n    &:after {\r\n      margin: 0 auto;\r\n      content: '';\r\n      display: block;\r\n      width: 98%;\r\n      height: 3px;\r\n      background: var(--orange);\r\n    }\r\n  }\r\n`\r\n\r\nexport const ContentsOrderedListWrapper = styled.ol`\r\n  column-count: 1;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0 -15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: var(--maxWidth-full);\r\n\r\n  li {\r\n    padding: 5px;\r\n    margin: var(--spacing-1) ;\r\n    box-sizing: border-box;\r\n    border: 1px solid var(--black);\r\n    border-radius: 5px;\r\n\r\n    a {\r\n      color: var(--black);\r\n      text-decoration: none;\r\n    }\r\n\r\n    h2 {\r\n      font-size: var(--fontSize-2);\r\n    }\r\n  }\r\n  .thumbnail {\r\n    float: left;\r\n  }\r\n\r\n  @media screen and (min-width: 512px) {\r\n    column-count: 2;\r\n\r\n    li {\r\n      padding: 15px;\r\n      width: 48%;\r\n\r\n      h2 {\r\n        font-size: var(--fontSize-3);\r\n      }\r\n\r\n      a {\r\n        &:hover h2 {\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    column-count: 3;\r\n\r\n    li {\r\n      width: 32%;\r\n    }\r\n  }\r\n`","import * as React from \"react\"\r\n\r\nimport { graphql, Link } from \"gatsby\"\r\nimport { PageContext } from \"gatsby/internal\"\r\nimport mergePosts from \"../utilFunction\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { ContentsListHeader, ContentsOrderedListWrapper } from \"../style\"\r\n\r\nconst CategoryList = ({ pageContext, data, location }: {pageContext: PageContext, data: any, location: Location}) => {\r\n  const categoryName = pageContext.category as string\r\n  const posts = mergePosts(data.allMdx, data.allWpPost, data.allFile)\r\n  const title = `【${categoryName}】カテゴリー 一覧`\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location}>\r\n        <Seo title={title} />\r\n        <p>\r\n          そのカテゴリーの記事はありません。\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Seo title={title} />\r\n      <ContentsListHeader>\r\n        <h1>{title}</h1>\r\n        <p>{posts.length} 記事あります</p>\r\n      </ContentsListHeader>\r\n      <ContentsOrderedListWrapper>\r\n        {posts.map(post => {\r\n          return (\r\n            <li key={post.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <Link to={post.slug} className=\"hoge\">\r\n                  <h2>\r\n                    <span>{post.title}</span>\r\n                  </h2>\r\n                  <section>\r\n                    <div><small>\r\n                      <time>{post.date}</time>\r\n                    </small></div>\r\n                    <div className=\"thumbnail\">\r\n                      {typeof post.gatsbyImage === \"undefined\" ||\r\n                        <GatsbyImage alt={post.altText} image={post.gatsbyImage} className=\"thumbnail\" />\r\n                      }\r\n                    </div>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: post.excerpt }}\r\n                    />\r\n                  </section>\r\n                </Link>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ContentsOrderedListWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CategoryList\r\n\r\nexport const pageQuery = graphql`\r\n  query( $category: String) {\r\n    allMdx(\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY/MM/DD\")\r\n          description\r\n          featuredImagePath\r\n        }\r\n      }\r\n    }\r\n    allWpPost(\r\n      sort: { date: DESC }\r\n      filter: { categories: { nodes: { elemMatch: { name: { eq: $category } } } } }\r\n    ) {\r\n      nodes {\r\n        title\r\n        excerpt\r\n        slug\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        featuredImage{\r\n          node{\r\n            altText\r\n            gatsbyImage(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import { getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nfunction mergePosts(allMdx: AllMdx, allWpPost: AllWpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  const mdxPosts = allMdx.nodes\r\n  const wpPosts = allWpPost.nodes\r\n  const posts = mdxPosts.map(post => {\r\n    const mdx: CommonPost = {\r\n      title: post.frontmatter.title,\r\n      excerpt: post.excerpt,\r\n      slug: post.fields.slug,\r\n      date: post.frontmatter.date,\r\n      description: post.frontmatter.description,\r\n      altText: post.frontmatter.featuredImagePath,\r\n      gatsbyImage: getImage(allFeaturedImages[post.frontmatter.featuredImagePath || \"featured/defaultThumbnail.png\"])\r\n    }\r\n    return mdx\r\n  }).concat(wpPosts.map(post => {\r\n    return {\r\n      title: post.title,\r\n      excerpt: post.excerpt,\r\n      slug: \"/\" + post.slug,\r\n      date: post.date,\r\n      altText: post.featuredImage?.node.altText || \"\",\r\n      gatsbyImage: post.featuredImage?.node.gatsbyImage || getImage(allFeaturedImages[\"featured/defaultThumbnail.png\"])\r\n    }\r\n  })).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()) as CommonPost[]\r\n\r\n  return posts\r\n}\r\n\r\nexport default mergePosts"],"names":["ContentsListHeader","styled","header","_templateObject","_taggedTemplateLiteralLoose","ContentsOrderedListWrapper","ol","_templateObject2","_ref","pageContext","data","location","categoryName","category","posts","mergePosts","allMdx","allWpPost","allFile","title","length","React","Layout","Seo","map","post","key","slug","className","itemType","Link","to","date","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","excerpt","allFeaturedImages","edges","forEach","node","relativePath","childImageSharp","gatsbyImageData","mdxPosts","nodes","wpPosts","frontmatter","fields","description","featuredImagePath","getImage","concat","_post$featuredImage","_post$featuredImage2","featuredImage","sort","a","b","Date","getTime"],"sourceRoot":""}