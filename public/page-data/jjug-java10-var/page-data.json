{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/jjug-java10-var/","result":{"data":{"allFile":{"edges":[]},"mdx":null,"mdPrevious":null,"mdNext":null,"wpPost":{"id":"cG9zdDoxMjk=","title":"中の人に聞く、Java10のvar記法の使い方について","content":"<p>java10から新しく使えるようになったコーディングにvar記法がありますが、これには主に可読性の面で賛否両論あったりするようです。そこでJJUGナイトセミナーでまさにそのvar記法について公式にOracleの人が話してくれましたので、ここにまとめようと思います。スピーカーはDavid Buckさん (@davidbuckjp, Oracle)という方で、発表スライドは<a href=\"https://www.slideshare.net/DavidBuck7/jdk-10\">こちら</a>です。</p>\n<h2>var記法とは</h2>\n<p>そもそもvar記法とは何かというところからです。2018/3/20にJavaの10がリリースされましたが、そこで入ってきた新しい記法です。</p>\n<p>どういう記法かと言うと、色んな型宣言を&#8221;var&#8221;で置き換えることができます。百聞は一見に如かずということで、以下を御覧ください。</p>\n<p><script src=\"https://gist.github.com/nisioka/187159961acf7af0a95049882dff33c5.js\"></script></p>\n<p>見てみると単純で、型を&#8221;var&#8221;に書き換えて宣言すれば良いだけです。後はJavaが勝手に型推論してくれるという寸法です。</p>\n<h3>（注意）動的型付けではない</h3>\n<p>よく勘違いされることらしいので、ここでも注意喚起しておきます。あくまでJavaは静的型付けの言語であり、それが動的型付け言語に変わったということではありません。見た目がvarという型に変わって見えるだけで、内部的には型は固定です。ですので、動的型付けのようなコーディング（異なる型を変数に代入）は、コンパイルエラーになります。</p>\n<p>例）</p>\n<p><script src=\"https://gist.github.com/nisioka/fc646ad39306828d132453b626e374f9.js\"></script></p>\n<h2>varの使い所</h2>\n<p>ここからが本題です。ではこれはどういったときに使っていくといいのか。今回のvar記法は何でもかんでも置き換えればよいという類の記法ではありませんので、適材適所を見極めなければなりません。</p>\n<h3>1. 読みやすくなる場合（≠書きやすさではない）</h3>\n<p>これがかなり重要な本質だと思います。var記法に限らず、Java言語としての思想として、「読みやすさ」をかなり意識しているため、スクリプト言語のように早く書けるということを重視しては駄目です。冗長さを省略して見やすく読みやすくなる場合に置き換えを検討すべきです。</p>\n<p><script src=\"https://gist.github.com/nisioka/d103f22e5c50c9dc4f4e5dc46115b803.js\"></script></p>\n<h3>2. ローカルコードで理解できる場合</h3>\n<p>これはvar記法に限ったことではありませんが、変数の宣言箇所と使用箇所が離れていると読みにくいのでやめましょうねという話です。</p>\n<h3>3. IDEなどのツールに依存すべきではない</h3>\n<p>EclipseやIntelliJなどのIDEを使えば、たとえvar記法であっても変数にマウスオーバーすれば型が表示されます。しかし、だからと言って、それを前提にして「IDEの機能で分かるから、コードとして多少分かりにくくてもいい」というのは駄目です。例えばブラウザ上でコードを見たりという状況で困ってしまいます。</p>\n<p><div data-gatsby-image-wrapper=\"\" style=\"position:relative;overflow:hidden;display:inline-block;vertical-align:top\" class=\"gatsby-image-wrapper gatsby-image-wrapper-constrained alignnone size-medium wp-image-137 inline-gatsby-image-wrapper\"><div style=\"max-width:300px;display:block\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height=&#x27;146&#x27;%20width=&#x27;300&#x27;%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20version=&#x27;1.1&#x27;%3E%3C/svg%3E\" style=\"max-width:100%;display:block;position:static\"/></div><div aria-hidden=\"true\" data-placeholder-image=\"\" style=\"height:100%;left:0;position:absolute;top:0;width:100%\"></div><img data-gatsby-image-ssr=\"\" data-wp-inline-image=\"1\" data-main-image=\"\" style=\"height:100%;left:0;position:absolute;top:0;transform:translateZ(0);transition:opacity 250ms linear;width:100%;will-change:opacity;opacity:0\" sizes=\"(min-width: 300px) 300px, 100vw\" decoding=\"async\" loading=\"lazy\" data-src=\"/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/2998d1370fcece07df6be72bb71e808a/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D75%26h%3D37%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40\" data-srcset=\"/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/2998d1370fcece07df6be72bb71e808a/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D75%26h%3D37%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40 75w,/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/53ce68be546d426aabb896756da68e1e/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D150%26h%3D73%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40 150w,/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/6399584a75ffc4d8ffb21bcbd8892a17/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D300%26h%3D146%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40 300w\" alt=\"\"/><noscript><img data-gatsby-image-ssr=\"\" data-wp-inline-image=\"1\" data-main-image=\"\" style=\"height:100%;left:0;position:absolute;top:0;transform:translateZ(0);transition:opacity 250ms linear;width:100%;will-change:opacity;opacity:0\" sizes=\"(min-width: 300px) 300px, 100vw\" decoding=\"async\" loading=\"lazy\" src=\"/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/2998d1370fcece07df6be72bb71e808a/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D75%26h%3D37%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40\" srcSet=\"/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/2998d1370fcece07df6be72bb71e808a/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D75%26h%3D37%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40 75w,/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/53ce68be546d426aabb896756da68e1e/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D150%26h%3D73%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40 150w,/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/6399584a75ffc4d8ffb21bcbd8892a17/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&amp;a=w%3D300%26h%3D146%26fm%3Dpng%26q%3D90&amp;cd=2018-04-03T04%3A01%3A40 300w\" alt=\"\"/></noscript><script type=\"module\">const t=\"undefined\"!=typeof HTMLImageElement&&\"loading\"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll(\"img[data-main-image]\");for(let e of t){e.dataset.src&&(e.setAttribute(\"src\",e.dataset.src),e.removeAttribute(\"data-src\")),e.dataset.srcset&&(e.setAttribute(\"srcset\",e.dataset.srcset),e.removeAttribute(\"data-srcset\"));const t=e.parentNode.querySelectorAll(\"source[data-srcset]\");for(let e of t)e.setAttribute(\"srcset\",e.dataset.srcset),e.removeAttribute(\"data-srcset\");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector(\"[data-placeholder-image]\").style.opacity=0)}}</script></div><script type=\"application/json\" data-wp-inline-image-hydration=\"1\">{\"image\":{\"images\":{\"sources\":[],\"fallback\":{\"src\":\"/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/2998d1370fcece07df6be72bb71e808a/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&a=w%3D75%26h%3D37%26fm%3Dpng%26q%3D90&cd=2018-04-03T04%3A01%3A40\",\"srcSet\":\"/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/2998d1370fcece07df6be72bb71e808a/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&a=w%3D75%26h%3D37%26fm%3Dpng%26q%3D90&cd=2018-04-03T04%3A01%3A40 75w,/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/53ce68be546d426aabb896756da68e1e/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&a=w%3D150%26h%3D73%26fm%3Dpng%26q%3D90&cd=2018-04-03T04%3A01%3A40 150w,/_gatsby/image/7e6bc4d619873a94bb2f07cc5ff839c8/6399584a75ffc4d8ffb21bcbd8892a17/2018-04-03_13h00_15.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2F2018-04-03_13h00_15.png&a=w%3D300%26h%3D146%26fm%3Dpng%26q%3D90&cd=2018-04-03T04%3A01%3A40 300w\",\"sizes\":\"(min-width: 300px) 300px, 100vw\"}},\"layout\":\"constrained\",\"width\":300,\"height\":146},\"alt\":\"\",\"className\":\"alignnone size-medium wp-image-137 inline-gatsby-image-wrapper\",\"data-wp-inline-image\":\"1\"}</script></p>\n<h3>4. 明示的に型を宣言するのとはトレードオフ</h3>\n<p>var記法は既存の型宣言を全て置き換えられるというわけではありません。必要に応じてあえてvarで書かずに型を明示したほうが分かりやすい場合もあるでしょうと言っていました。冗長さの削減と、正確に明示のバランスを見る必要がありますね。</p>\n<h3>5. 連続の呼び出しを分解するために</h3>\n<p>ラムダ式などのメソッドチェーンで長々と書けるが、可読性向上のために途中で区切りたいという場合にvar記法は便利です。たいていそういった途中の値を変数としようとすると、型が不必要に複雑だったりします。そうした複雑な型に目を奪われてしまいますが、重要なのは型ではなかったりということも往々にしてあります。</p>\n<p><script src=\"https://gist.github.com/nisioka/319df6b9c8baea5dea4c8892b02fa247.js\"></script></p>\n<h3>6. 意外と便利な用法（for文、try-with-resources文）</h3>\n<p>私にとっては意外だったのですが、これらの構文内の変数もローカル変数ですので、var記法が使えて便利ですし、見やすくなるためどんどん使うべきです。</p>\n<p><script src=\"https://gist.github.com/nisioka/a0604639f530725e62fff5a47c9af439.js\"></script></p>\n<h3>7. ローカル変数なのでインターフェースプログラミングは気にしない。</h3>\n<p>David Buckさんも訳に困っていましたが、インターフェースプログラミング（programing to the interface）とは、よく言われる、&#8221;ArrayListはList型の変数で受けること&#8221;というポリモーフィズム実現のための定石のことです。こうしたインターフェース型で変数を定義するということは癖になっている人も多いとは思うのですが、その書き方はvar記法では実現できません。ただ、ローカル変数ということを考えるとそうする必要がないことのほうが多いハズなので気にせずvar記法を使っていきましょうというスタンスのようです。もちろん、インターフェース型で受けたほうがいいという場合はvarを使わずに明示して書けばよいです。</p>\n<p><script src=\"https://gist.github.com/nisioka/058e6e4445b574bb623d79a296184cbd.js\"></script></p>\n<h3>8. 気をつけるところ</h3>\n<p>総称型を使う場合は、宣言時にきちんと明示しなければなりません。当たり前ですが推論のしようがないので。以下のコードコメントの通りです。</p>\n<p><script src=\"https://gist.github.com/nisioka/07a44df8cb888bea251ed695ec004bde.js\"></script></p>\n<h2>まとめ</h2>\n<p>この新記法は地味ですね。ですが、地味に便利だと思います^^。やはり物理的にコードが長いと読みにくいというのは確かなので、使えるところは使っていきたいです。</p>\n","excerpt":"<p>java10から新しく使えるようになったコーディングにvar記法がありますが、これには主に可読性の面で賛否両論あったりするようです。そこでJJUGナイトセミナーでまさにそのvar記法について公式にOracleの人が話して [&hellip;]</p>\n","slug":"jjug-java10-var","date":"2018/04/03","featuredImage":{"node":{"altText":"","gatsbyImage":{"images":{"sources":[{"srcSet":"/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/995cf83c723039395a1cc28e072f39ca/Java.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D71%26h%3D45%26fm%3Davif%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 71w,/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/a6f8a5b4ef8b65be0450ab146e31af72/Java.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D142%26h%3D89%26fm%3Davif%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 142w,/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/02396bfe76ecf122431c05782ed63cf3/Java.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D283%26h%3D178%26fm%3Davif%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 283w","type":"image/avif","sizes":"(min-width: 283px) 283px, 100vw"},{"srcSet":"/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/ceac5a6f4859e5d780a3e9ea7dee614c/Java.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D71%26h%3D45%26fm%3Dwebp%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 71w,/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/11b3c91b3c8b14b620b2e07707b4eb24/Java.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D142%26h%3D89%26fm%3Dwebp%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 142w,/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/d58e5151e17a3f4436a616a6c268e179/Java.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D283%26h%3D178%26fm%3Dwebp%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 283w","type":"image/webp","sizes":"(min-width: 283px) 283px, 100vw"}],"fallback":{"src":"/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/3b404e74502abb808d28831d9ad31adc/Java.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D71%26h%3D45%26fm%3Dpng%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef","srcSet":"/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/3b404e74502abb808d28831d9ad31adc/Java.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D71%26h%3D45%26fm%3Dpng%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 71w,/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/c915baf62c7f186f9085711bd1169962/Java.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D142%26h%3D89%26fm%3Dpng%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 142w,/_gatsby/image/f07526e693cacec87ee29dcd4265c8ef/f642881847bc4eb83f430fa774d85676/Java.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F04%2FJava.png&a=w%3D283%26h%3D178%26fm%3Dpng%26q%3D75&cd=34f278dba14f40eb9ef1845efbae55ef 283w","sizes":"(min-width: 283px) 283px, 100vw"}},"layout":"constrained","width":283,"height":178,"backgroundColor":"rgb(248,248,248)"}}}},"wpPrevious":{"title":"JJUG ナイトセミナー 「Java SE 10 / JDK10リリース特集」に行ってきた 【2018/3/26】","slug":"2018-03-26-jjug-night-seminar"},"wpNext":{"title":"公式主催のGitHub Enterprise企業導入セミナーに行ってきた","slug":"github-enterprise"}},"pageContext":{"id":"cG9zdDoxMjk=","previousPostId":"cG9zdDoxMjY=","nextPostId":"cG9zdDoxMTY=","imagePath":null}},"staticQueryHashes":[],"slicesMap":{}}