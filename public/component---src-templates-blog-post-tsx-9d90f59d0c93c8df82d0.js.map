{"version":3,"file":"component---src-templates-blog-post-tsx-9d90f59d0c93c8df82d0.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx","webpack://gatsby-starter-blog/./src/utilFunction.ts"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport styled from \"styled-components\"\r\nimport { mergePost } from \"../utilFunction\"\r\n\r\ntype BlogPostTemplateProps = {\r\n  data: {\r\n    allFile: AllFile\r\n    mdx: MdxPost\r\n    mdPrevious: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n      }\r\n    }\r\n    mdNext: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n      }\r\n    }\r\n    wpPost: WpPost\r\n    wpPrevious: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n    }\r\n    wpNext: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n    }\r\n  }\r\n  location: Location\r\n  children: React.ReactNode\r\n}\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { allFile, mdx, mdPrevious, mdNext, wpPost, wpPrevious, wpNext },\r\n  location, children\r\n}: BlogPostTemplateProps) => {\r\n  const post = {\r\n    id: mdx?.id || wpPost?.id,\r\n    title: mdx?.frontmatter.title || wpPost?.title,\r\n    body: mdx?.body || wpPost?.content,\r\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\r\n    slug: mdx?.fields.slug || \"/\" + wpPost?.slug,\r\n    date: mdx?.frontmatter.date || wpPost?.date,\r\n    description: mdx?.frontmatter.description,\r\n    altText: wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage: wpPost?.featuredImage?.node.gatsbyImage || getImage(allFile.edges[0]?.node.childImageSharp),\r\n    category: mdx?.frontmatter.category || wpPost?.categories?.nodes[0]?.name,\r\n    tags: mdx?.frontmatter.tags || wpPost?.tags?.nodes.map(t => t.name),\r\n  }\r\n  const previous = {\r\n    id: mdPrevious?.id || wpPrevious?.id,\r\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\r\n    slug: mdPrevious?.fields.slug || \"/\" + wpPrevious?.slug,\r\n  }\r\n  const next = {\r\n    id: mdNext?.id || wpNext?.id,\r\n    title: mdNext?.frontmatter.title || wpNext?.title,\r\n    slug: mdNext?.fields.slug || \"/\" + wpNext?.slug,\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.title}</h1>\r\n          <p>\r\n            <div className=\"time\">\r\n              <small>\r\n                <time>{post.date}</time>\r\n              </small>\r\n            </div>\r\n          </p>\r\n        </header>\r\n        <div className=\"featuredImage\">\r\n          <GatsbyImage\r\n            image={post.gatsbyImage}\r\n            alt={post.title}\r\n          />\r\n        </div>\r\n        <Dl>\r\n          <dt>カテゴリ</dt>\r\n          <dd><Link to={`/category/${post.category}`}>{post.category}</Link></dd>\r\n        </Dl>\r\n        <Dl>\r\n          <dt>タグ</dt>\r\n          {post.tags.map((tag, index) => {\r\n            return <dd key={`tag${index}`}><Link to={`/tag/${tag}/`}>{tag}</Link></dd>\r\n          })}\r\n        </Dl>\r\n\r\n        <BlogEntry>\r\n          {children ||  // MDX or Wordpress content\r\n            <section\r\n              dangerouslySetInnerHTML={{ __html: post.body }}\r\n              itemProp=\"articleBody\"\r\n            />\r\n          }\r\n        </BlogEntry>\r\n        <hr />\r\n        <footer>\r\n        </footer>\r\n      </Article>\r\n      <BlogPostNav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.slug} rel=\"prev\">\r\n                ← {previous.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.slug} rel=\"next\">\r\n                {next.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </BlogPostNav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n    $imagePath: String\r\n  ) {\r\n    allFile(\r\n      filter: {\r\n        relativePath: { eq: $imagePath }\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 960\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    mdx(id: { eq: $id }) {\r\n      id\r\n      excerpt\r\n      body\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        description\r\n        category\r\n        tags\r\n      }\r\n      \r\n    }\r\n    mdPrevious: mdx(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    mdNext: mdx(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    wpPost(id: { eq: $id }) {\r\n      id\r\n      title\r\n      content\r\n      excerpt\r\n      slug\r\n      date(formatString: \"YYYY/MM/DD\")\r\n      featuredImage{\r\n        node{\r\n          altText\r\n          gatsbyImage(width: 960)\r\n        }\r\n      }\r\n      categories{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n      tags{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n    }\r\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\r\n      title\r\n      slug\r\n    }\r\n    wpNext: wpPost(id: { eq: $nextPostId }) {\r\n      title\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head = ({\r\n                       data: { allFile, mdx, wpPost },\r\n                       location\r\n                     }: BlogPostTemplateProps) => {\r\n  const post = mergePost(mdx, wpPost, allFile)\r\n  return (\r\n    <Seo\r\n      title={post.title}\r\n      description={post.excerpt}\r\n      location={location}\r\n      imagePath={post.gatsbyImage ? post.gatsbyImage.images.fallback?.src : null}\r\n      post={post}\r\n    />\r\n  )\r\n}\r\n\r\nconst Article = styled.article`\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n\r\n  .time {\r\n    text-align: right;\r\n  }\r\n\r\n  .featuredImage {\r\n    text-align: center;\r\n  }\r\n`\r\nconst BlogEntry = styled.div`\r\n  margin: 15px 0 30px;\r\n  border-top: 1px solid #ccc;\r\n  border-bottom: 1px solid #ccc;\r\n`\r\nconst BlogPostNav = styled.nav`\r\n  max-width: 750px;\r\n  margin: 0 auto;\r\n\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n  }\r\n`\r\nconst Dl = styled.dl`\r\n  display: flex;\r\n  margin: 0;\r\n\r\n  dt {\r\n    width: 80px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  dd {\r\n    font-size: 14px;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n\r\n    & + dd {\r\n      margin-left: 15px;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      border-radius: 3px;\r\n      color: #fff;\r\n      background: var(--orange);\r\n      padding: 2px 5px;\r\n\r\n      &:hover {\r\n        opacity: .5;\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nexport function mergePosts(allMdx: AllMdx, allWpPost: AllWpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  const mdxPosts = allMdx.nodes\r\n  const wpPosts = allWpPost.nodes\r\n  return mdxPosts.map(post => {\r\n    const mdx: CommonPost = {\r\n      title: post.frontmatter.title,\r\n      excerpt: post.excerpt,\r\n      slug: post.fields.slug,\r\n      date: post.frontmatter.date,\r\n      description: post.frontmatter.description,\r\n      altText: post.frontmatter.featuredImagePath,\r\n      gatsbyImage: getImage(allFeaturedImages[post.frontmatter.featuredImagePath || \"featured/defaultThumbnail.png\"])\r\n    }\r\n    return mdx\r\n  }).concat(wpPosts.map(post => {\r\n    return {\r\n      title: post.title,\r\n      excerpt: post.excerpt,\r\n      slug: \"/\" + post.slug,\r\n      date: post.date,\r\n      altText: post.featuredImage?.node.altText || \"\",\r\n      gatsbyImage: post.featuredImage?.node.gatsbyImage || getImage(allFeaturedImages[\"featured/defaultThumbnail.png\"])\r\n    }\r\n  })).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()) as CommonPost[]\r\n}\r\n\r\nexport function mergePost(mdx?: MdxPost, wpPost?: WpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  return {\r\n    title: mdx?.frontmatter.title || wpPost?.title,\r\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\r\n    slug: mdx?.fields.slug || \"/\" + wpPost?.slug,\r\n    date: mdx?.frontmatter.date || wpPost?.date,\r\n    description: mdx?.frontmatter.description || \"\",\r\n    altText: mdx?.frontmatter.featuredImagePath || wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage: getImage(allFeaturedImages[mdx?.frontmatter.featuredImagePath || \"featured/defaultThumbnail.webp\"])\r\n      || wpPost?.featuredImage?.node.gatsbyImage\r\n      || getImage(allFeaturedImages[\"featured/defaultThumbnail.webp\"])\r\n  } as CommonPost\r\n}\r\n"],"names":["_ref","_wpPost$featuredImage","_wpPost$featuredImage2","_allFile$edges$","_wpPost$categories","_wpPost$categories$no","_wpPost$tags","data","allFile","mdx","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","children","post","id","title","frontmatter","body","content","excerpt","slug","fields","date","description","altText","featuredImage","node","gatsbyImage","getImage","edges","childImageSharp","category","categories","nodes","name","tags","map","t","previous","next","React","Layout","Article","className","itemScope","itemType","itemProp","GatsbyImage","image","alt","Dl","Link","to","tag","index","key","BlogEntry","dangerouslySetInnerHTML","__html","BlogPostNav","style","display","flexWrap","justifyContent","listStyle","padding","rel","Head","_ref2","_post$gatsbyImage$ima","mergePost","Seo","imagePath","images","fallback","src","styled","article","_templateObject","_taggedTemplateLiteralLoose","div","_templateObject2","nav","_templateObject3","dl","_templateObject4","mergePosts","allMdx","allWpPost","allFeaturedImages","forEach","relativePath","gatsbyImageData","mdxPosts","wpPosts","featuredImagePath","concat","_post$featuredImage","_post$featuredImage2","sort","a","b","Date","getTime"],"sourceRoot":""}