{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-my-second-post-index-md-7813c7af926f3531e417.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/my-second-post/index.md","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Wow! I love blogging so much already.\"), \"\\n\", React.createElement(_components.p, null, \"Did you know that \\\"despite its name, salted duck eggs can also be made from\\r\\nchicken eggs, though the taste and texture will be somewhat different, and the\\r\\negg yolk will be less rich.\\\"?\\r\\n(\", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Salted_duck_egg\"\n  }, \"Wikipedia Link\"), \")\"), \"\\n\", React.createElement(_components.p, null, \"Yeah, I didn't either.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/IP/sun0range.com/content/blog/my-second-post/index.md\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nconst BlogPostTemplate = ({data: {site, allFile, mdx, mdPrevious, mdNext, wpPost, wpPrevious, wpNext}, location, children}) => {\n  const post = {\n    id: mdx?.id || wpPost?.id,\n    title: mdx?.frontmatter.title || wpPost?.title,\n    body: mdx?.body || wpPost?.content,\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\n    slug: mdx?.fields.slug || wpPost?.slug,\n    date: mdx?.frontmatter.date || wpPost?.date,\n    description: mdx?.frontmatter.description,\n    altText: wpPost?.featuredImage?.node.altText || \"\",\n    gatsbyImage: wpPost?.featuredImage?.node.gatsbyImage || getImage(allFile.edges[0]?.node.childImageSharp)\n  };\n  const previous = {\n    id: mdPrevious?.id || wpPrevious?.id,\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\n    slug: mdPrevious?.fields.slug || wpPrevious?.slug\n  };\n  const next = {\n    id: mdNext?.id || wpNext?.id,\n    title: mdNext?.frontmatter.title || wpNext?.title,\n    slug: mdNext?.fields.slug || wpNext?.slug\n  };\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.title), React.createElement(\"p\", null, post.date)), React.createElement(GatsbyImage, {\n    image: post.gatsbyImage,\n    alt: post.title.toString()\n  }), children || React.createElement(\"section\", {\n    dangerouslySetInnerHTML: {\n      __html: post.body\n    },\n    itemProp: \"articleBody\"\n  }), React.createElement(\"hr\"), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.slug,\n    rel: \"prev\"\n  }, \"← \", previous.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.slug,\n    rel: \"next\"\n  }, next.title, \" →\")))));\n};\nexport const Head = ({data: {mdPost, wpPost}}) => {\n  const post = {\n    id: mdPost?.id || wpPost?.id,\n    title: mdPost?.frontmatter.title || wpPost?.title,\n    slug: mdPost?.fields.slug || wpPost?.slug\n  };\n  return React.createElement(Seo, {\n    title: post.title,\n    description: post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n    $imagePath: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allFile(\n      filter: {\n        relativePath: { eq: $imagePath }\n        # ↓ 画像を格納してある場所がimages（gatsby-config.jsで指定した名）\n        sourceInstanceName: { eq: \"images\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1000\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        description\n      }\n    }\n    mdPrevious: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    mdNext: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    wpPost(id: { eq: $id }) {\n      id\n      title\n      content\n      excerpt\n      slug\n      date(formatString: \"YYYY/MM/DD\")\n      featuredImage{\n        node{\n          altText\n          gatsbyImage(width: 960)\n        }\n      }\n    }\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\n      title\n      slug\n    }\n    wpNext: wpPost(id: { eq: $nextPostId }) {\n      title\n      slug\n    }\n  }\n`;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","BlogPostTemplate","_ref","_wpPost$featuredImage","_wpPost$featuredImage2","_allFile$edges$","data","site","allFile","mdx","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","children","post","id","title","frontmatter","body","content","excerpt","slug","fields","date","description","altText","featuredImage","node","gatsbyImage","getImage","edges","childImageSharp","previous","next","Layout","className","itemScope","itemType","itemProp","GatsbyImage","image","alt","toString","dangerouslySetInnerHTML","__html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","rel","Head","_ref2","mdPost","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}