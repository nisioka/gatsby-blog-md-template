{"version":3,"file":"component---src-pages-index-tsx-5dc92e7edfbd8f128ace.js","mappings":"6KA+FA,IAtFmBA,IAAuD,IACpEC,EACAC,EACAC,EACAC,GAJc,QAAEC,EAAO,QAAEC,EAAO,KAAEC,EAAO,IAAqBP,EAmElE,OA5DEC,EADc,IAAZK,EAEAE,EAAAA,cAAA,MAAIC,UAAU,WAAWC,IAAI,eAC3BF,EAAAA,cAAA,YAAM,OAKRA,EAAAA,cAAA,MAAIE,IAAI,eACNF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAE,IAAML,GAAOA,EAAO,IAAM,KAAM,OAM5CL,EADc,IAAZI,EAEAE,EAAAA,cAAA,MAAIC,UAAU,WAAWC,IAAI,eAC3BF,EAAAA,cAAA,YAAM,OAGW,IAAZF,EAEPE,EAAAA,cAAA,MAAIE,IAAI,eACNF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAE,IAAML,GAAOA,EAAO,IAAM,KAAM,OAK1CC,EAAAA,cAAA,MAAIE,IAAI,eACNF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAE,IAAML,GAAOA,EAAO,IAAM,IAAE,SAAQD,EAAU,GAAC,KAAK,OAMhEH,EADEG,IAAYD,EAEZG,EAAAA,cAAA,MAAIC,UAAU,WAAWC,IAAI,eAC3BF,EAAAA,cAAA,YAAM,OAKRA,EAAAA,cAAA,MAAIE,IAAI,eACNF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAE,IAAML,GAAOA,EAAO,IAAM,IAAE,SAAQD,EAAU,GAAC,KAAK,OAMhEF,EADEE,IAAYD,EAEZG,EAAAA,cAAA,MAAIC,UAAU,WAAWC,IAAI,cAC3BF,EAAAA,cAAA,YAAM,OAKRA,EAAAA,cAAA,MAAIE,IAAI,eACNF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAE,IAAML,GAAOA,EAAO,IAAM,IAAE,QAAQF,EAAO,KAAK,OAI1DA,EAAU,EAEVG,EAAAA,cAACK,EAAiB,KAChBL,EAAAA,cAAA,UACGP,EACAC,EACDM,EAAAA,cAAA,MAAIE,IAAI,eAAc,QACdJ,EAAQ,IAAED,GAEjBF,EACAC,IAKAI,EAAAA,cAAAA,EAAAA,SAAA,KACT,EAKF,MAAMK,EAAoBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ijB,oJClBpC,UA5DkBjB,IAAwC,IAAvC,KAAEkB,EAAI,SAAEC,GAA0BnB,EAEnD,MAAMoB,GAAQC,EAAAA,EAAAA,GAAWH,EAAKI,OAAQJ,EAAKK,UAAWL,EAAKM,SAE3D,GAAqB,IAAjBJ,EAAMK,OACR,OACEjB,EAAAA,cAACkB,EAAAA,EAAM,CAACP,SAAUA,GAChBX,EAAAA,cAAA,SAAG,8JAST,MACMH,EAAUsB,KAAKC,KAAKR,EAAMK,OADV,IAGtB,OACEjB,EAAAA,cAACkB,EAAAA,EAAM,CAACP,SAAUA,GAChBX,EAAAA,cAACqB,EAAAA,GAA0B,KACxBT,EAAMU,MAAM,EANG,IAMeC,KAAIC,GAE/BxB,EAAAA,cAAA,MAAIE,IAAKsB,EAAKC,MACZzB,EAAAA,cAAA,WACEC,UAAU,iBACVyB,SAAS,8BAET1B,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAIoB,EAAKC,KAAME,SAAS,OAC5B3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,QAAM2B,SAAS,YAAYH,EAAKI,QAElC5B,EAAAA,cAAA,eACEA,EAAAA,cAAA,OAAK6B,MAAO,CAAEC,UAAW,UAAW9B,EAAAA,cAAA,aAClCA,EAAAA,cAAA,YAAOwB,EAAKO,QAEd/B,EAAAA,cAAA,OAAKC,UAAU,kBACgB,IAArBuB,EAAKQ,aACXhC,EAAAA,cAACiC,EAAAA,EAAW,CAACC,IAAKV,EAAKW,QAASC,MAAOZ,EAAKQ,eAGhDhC,EAAAA,cAAA,KACEqC,wBAAyB,CACvBC,OAAQd,EAAKe,SAEfZ,SAAS,uBASzB3B,EAAAA,cAACwC,EAAAA,EAAU,CAAC3C,QAASA,EAASC,QAAS,IAChC,EAWN,MAAM2C,EAAOC,IAAA,IAAC,SAAE/B,GAA0B+B,EAAA,OAAK1C,EAAAA,cAAC2C,EAAAA,EAAG,CAACf,MAAM,GAAGjB,SAAUA,GAAW,C,2FCpFlF,SAASE,EAAWC,EAAgBC,EAAsBC,GAC/D,IAAI4B,EAAyD,CAAC,EAC9D5B,GAAWA,EAAQ6B,MAAMC,SAAQC,IAC/BH,EAAkBG,EAAKA,KAAKC,cAAgBD,EAAKA,KAAKE,gBAAgBC,eAAe,IAEvF,MAAMC,EAAWrC,EAAOsC,MAClBC,EAAUtC,EAAUqC,MAC1B,OAAOD,EAAS5B,KAAIC,IACM,CACtBI,MAAOJ,EAAK8B,YAAY1B,MACxBW,QAASf,EAAKe,QACdd,KAAMD,EAAK+B,OAAO9B,KAClBM,KAAMP,EAAK8B,YAAYvB,KACvByB,YAAahC,EAAK8B,YAAYE,YAC9BrB,QAASX,EAAK8B,YAAYG,kBAC1BzB,aAAa0B,EAAAA,EAAAA,GAASd,EAAkBpB,EAAK8B,YAAYG,mBAAqB,kCAC9EE,SAAUnC,EAAK8B,YAAYK,UAAY,GACvCC,KAAMpC,EAAK8B,YAAYM,MAAQ,OAGhCC,OAAOR,EAAQ9B,KAAIC,IAAS,IAADsC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5B,MAAO,CACLtC,MAAOJ,EAAKI,MACZW,QAASf,EAAKe,QACdd,KAAM,IAAMD,EAAKC,KACjBM,KAAMP,EAAKO,KACXI,SAA2B,QAAlB2B,EAAAtC,EAAK2C,qBAAa,IAAAL,OAAA,EAAlBA,EAAoBf,KAAKZ,UAAW,GAC7CH,aAA+B,QAAlB+B,EAAAvC,EAAK2C,qBAAa,IAAAJ,OAAA,EAAlBA,EAAoBhB,KAAKf,eAAe0B,EAAAA,EAAAA,GAASd,EAAkB,kCAChFe,UAAyB,QAAfK,EAAAxC,EAAK4C,kBAAU,IAAAJ,GAAU,QAAVC,EAAfD,EAAiBZ,MAAM,UAAE,IAAAa,OAAV,EAAfA,EAA2BI,OAAQ,GAC7CT,MAAe,QAATM,EAAA1C,EAAKoC,YAAI,IAAAM,OAAA,EAATA,EAAWd,MAAM7B,KAAI+C,GAAKA,EAAED,SAAS,GAC5C,KACCE,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAE1C,MAAM4C,UAAY,IAAID,KAAKF,EAAEzC,MAAM4C,WACnE,CAEO,SAASC,EAAUC,EAAeC,EAAiB9D,GAAoB,IAAD+D,EAAAC,EAC3E,IAAIpC,EAAyD,CAAC,EAI9D,OAHA5B,GAAWA,EAAQ6B,MAAMC,SAAQC,IAC/BH,EAAkBG,EAAKA,KAAKC,cAAgBD,EAAKA,KAAKE,gBAAgBC,eAAe,IAEhF,CACLtB,OAAOiD,aAAG,EAAHA,EAAKvB,YAAY1B,SAASkD,aAAM,EAANA,EAAQlD,OACzCW,SAASsC,aAAG,EAAHA,EAAKtC,WAAWuC,aAAM,EAANA,EAAQvC,SACjCd,MAAMoD,aAAG,EAAHA,EAAKtB,OAAO9B,OAAQ,KAAMqD,aAAM,EAANA,EAAQrD,MACxCM,MAAM8C,aAAG,EAAHA,EAAKvB,YAAYvB,QAAQ+C,aAAM,EAANA,EAAQ/C,MACvCyB,aAAaqB,aAAG,EAAHA,EAAKvB,YAAYE,cAAe,GAC7CrB,SAAS0C,aAAG,EAAHA,EAAKvB,YAAYG,qBAAqBqB,SAAqB,QAAfC,EAAND,EAAQX,qBAAa,IAAAY,OAAf,EAANA,EAAuBhC,KAAKZ,UAAW,GACtFH,aAAa0B,EAAAA,EAAAA,GAASd,GAAkBiC,aAAG,EAAHA,EAAKvB,YAAYG,oBAAqB,qCACzEqB,SAAqB,QAAfE,EAANF,EAAQX,qBAAa,IAAAa,OAAf,EAANA,EAAuBjC,KAAKf,eAC5B0B,EAAAA,EAAAA,GAASd,EAAkB,mCAEpC,C","sources":["webpack://gatsby-starter-blog/./src/components/pagination.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx","webpack://gatsby-starter-blog/./src/utilFunction.ts"],"sourcesContent":["import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\ntype PaginationProps = {\r\n  maxPage: number\r\n  current: number\r\n  type?: string\r\n}\r\nconst Pagination = ({ maxPage, current, type = \"\" }: PaginationProps) => {\r\n  let first\r\n  let prev\r\n  let next\r\n  let last\r\n\r\n  if (current === 1) {\r\n    first = (\r\n      <li className=\"not-work\" key=\"pagination0\">\r\n        <span>最新</span>\r\n      </li>\r\n    )\r\n  } else {\r\n    first = (\r\n      <li key=\"pagination0\">\r\n        <Link to={`/${type}${type ? \"/\" : \"\"}`}>最新</Link>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  if (current === 1) {\r\n    prev = (\r\n      <li className=\"not-work\" key=\"pagination1\">\r\n        <span>前へ</span>\r\n      </li>\r\n    )\r\n  } else if (current === 2) {\r\n    prev = (\r\n      <li key=\"pagination1\">\r\n        <Link to={`/${type}${type ? \"/\" : \"\"}`}>前へ</Link>\r\n      </li>\r\n    )\r\n  } else {\r\n    prev = (\r\n      <li key=\"pagination1\">\r\n        <Link to={`/${type}${type ? \"/\" : \"\"}page/${current - 1}/`}>前へ</Link>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  if (current === maxPage) {\r\n    next = (\r\n      <li className=\"not-work\" key=\"pagination3\">\r\n        <span>次へ</span>\r\n      </li>\r\n    )\r\n  } else {\r\n    next = (\r\n      <li key=\"pagination3\">\r\n        <Link to={`/${type}${type ? \"/\" : \"\"}page/${current + 1}/`}>次へ</Link>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  if (current === maxPage) {\r\n    last = (\r\n      <li className=\"not-work\" key=\"paginatio4\">\r\n        <span>最後</span>\r\n      </li>\r\n    )\r\n  } else {\r\n    last = (\r\n      <li key=\"pagination4\">\r\n        <Link to={`/${type}${type ? \"/\" : \"\"}page/${maxPage}/`}>最後</Link>\r\n      </li>\r\n    )\r\n  }\r\n  if (maxPage > 1) {\r\n    return (\r\n      <PaginationWrapper>\r\n        <ul>\r\n          {first}\r\n          {prev}\r\n          <li key=\"pagination2\">\r\n            page {current}/{maxPage}\r\n          </li>\r\n          {next}\r\n          {last}\r\n        </ul>\r\n      </PaginationWrapper>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default Pagination\r\n\r\nconst PaginationWrapper = styled.nav`\r\n  ul {\r\n    display: flex;\r\n    list-style: none;\r\n    justify-content: center;\r\n\r\n    li {\r\n      padding: 0 10px;\r\n\r\n      &.not-work span {\r\n        text-decoration: none;\r\n        background: var(--orange);\r\n        color: #fff;\r\n        opacity: 0.5;\r\n      }\r\n\r\n      span, a {\r\n        text-decoration: underline;\r\n        display: flex;\r\n        align-items: center;\r\n        font-weight: 700;\r\n        color: var(--orange);\r\n        border-radius: 5px;\r\n        border: 1px solid var(--orange);\r\n        padding: 0 10px;\r\n      }\r\n    }\r\n  }\r\n`","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { mergePosts } from \"../utilFunction\"\r\nimport { ContentsOrderedListWrapper } from \"../style\"\r\nimport Pagination from \"../components/pagination\"\r\n\r\ntype BlogIndexProps = {\r\n  data: {\r\n    allMdx: AllMdx\r\n    allWpPost: AllWpPost\r\n    allFile: AllFile\r\n  }\r\n  location: Location\r\n}\r\n\r\nconst BlogIndex = ({ data, location }: BlogIndexProps) => {\r\n\r\n  const posts = mergePosts(data.allMdx, data.allWpPost, data.allFile)\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location}>\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  const POST_PER_PAGE = 12\r\n  const maxPage = Math.ceil(posts.length / POST_PER_PAGE)\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <ContentsOrderedListWrapper>\r\n        {posts.slice(0, POST_PER_PAGE).map(post => {\r\n          return (\r\n            <li key={post.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemType=\"https://schema.org/Article\"\r\n              >\r\n                <Link to={post.slug} itemProp=\"url\">\r\n                  <h2>\r\n                    <span itemProp=\"headline\">{post.title}</span>\r\n                  </h2>\r\n                  <section>\r\n                    <div style={{ textAlign: \"right\" }}><small>\r\n                      <time>{post.date}</time>\r\n                    </small></div>\r\n                    <div className=\"thumbnail\">\r\n                      {typeof post.gatsbyImage === \"undefined\" ||\r\n                        <GatsbyImage alt={post.altText} image={post.gatsbyImage} />\r\n                      }\r\n                    </div>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: post.excerpt\r\n                      }}\r\n                      itemProp=\"description\"\r\n                    />\r\n                  </section>\r\n                </Link>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ContentsOrderedListWrapper>\r\n      <Pagination maxPage={maxPage} current={1}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = ({ location }: BlogIndexProps) => <Seo title=\"\" location={location}/>\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allMdx(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY/MM/DD\")\r\n          description\r\n          featuredImagePath\r\n        }\r\n      }\r\n    }\r\n    allWpPost(sort: { date: DESC }) {\r\n      nodes {\r\n        title\r\n        excerpt\r\n        slug\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        featuredImage{\r\n          node{\r\n            altText\r\n            gatsbyImage(\r\n              width: 100,\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nexport function mergePosts(allMdx: AllMdx, allWpPost: AllWpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  const mdxPosts = allMdx.nodes\r\n  const wpPosts = allWpPost.nodes\r\n  return mdxPosts.map(post => {\r\n    const mdx: CommonPost = {\r\n      title: post.frontmatter.title,\r\n      excerpt: post.excerpt,\r\n      slug: post.fields.slug,\r\n      date: post.frontmatter.date,\r\n      description: post.frontmatter.description,\r\n      altText: post.frontmatter.featuredImagePath,\r\n      gatsbyImage: getImage(allFeaturedImages[post.frontmatter.featuredImagePath || \"featured/defaultThumbnail.png\"]),\r\n      category: post.frontmatter.category || \"\",\r\n      tags: post.frontmatter.tags || []\r\n    }\r\n    return mdx\r\n  }).concat(wpPosts.map(post => {\r\n    return {\r\n      title: post.title,\r\n      excerpt: post.excerpt,\r\n      slug: \"/\" + post.slug,\r\n      date: post.date,\r\n      altText: post.featuredImage?.node.altText || \"\",\r\n      gatsbyImage: post.featuredImage?.node.gatsbyImage || getImage(allFeaturedImages[\"featured/defaultThumbnail.png\"]),\r\n      category: post.categories?.nodes[0]?.name || \"\",\r\n      tags: post.tags?.nodes.map(t => t.name) || []\r\n    }\r\n  })).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()) as CommonPost[]\r\n}\r\n\r\nexport function mergePost(mdx?: MdxPost, wpPost?: WpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  return {\r\n    title: mdx?.frontmatter.title || wpPost?.title,\r\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\r\n    slug: mdx?.fields.slug || \"/\" + wpPost?.slug,\r\n    date: mdx?.frontmatter.date || wpPost?.date,\r\n    description: mdx?.frontmatter.description || \"\",\r\n    altText: mdx?.frontmatter.featuredImagePath || wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage: getImage(allFeaturedImages[mdx?.frontmatter.featuredImagePath || \"featured/defaultThumbnail.webp\"])\r\n      || wpPost?.featuredImage?.node.gatsbyImage\r\n      || getImage(allFeaturedImages[\"featured/defaultThumbnail.webp\"])\r\n  } as CommonPost\r\n}\r\n"],"names":["_ref","first","prev","next","last","maxPage","current","type","React","className","key","Link","to","PaginationWrapper","styled","nav","_templateObject","_taggedTemplateLiteralLoose","data","location","posts","mergePosts","allMdx","allWpPost","allFile","length","Layout","Math","ceil","ContentsOrderedListWrapper","slice","map","post","slug","itemType","itemProp","title","style","textAlign","date","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","excerpt","Pagination","Head","_ref2","Seo","allFeaturedImages","edges","forEach","node","relativePath","childImageSharp","gatsbyImageData","mdxPosts","nodes","wpPosts","frontmatter","fields","description","featuredImagePath","getImage","category","tags","concat","_post$featuredImage","_post$featuredImage2","_post$categories","_post$categories$node","_post$tags","featuredImage","categories","name","t","sort","a","b","Date","getTime","mergePost","mdx","wpPost","_wpPost$featuredImage","_wpPost$featuredImage2"],"sourceRoot":""}