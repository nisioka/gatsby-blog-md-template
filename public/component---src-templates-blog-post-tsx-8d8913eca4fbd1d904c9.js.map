{"version":3,"file":"component---src-templates-blog-post-tsx-8d8913eca4fbd1d904c9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/related-list.tsx","webpack://gatsby-starter-blog/./src/style.tsx","webpack://gatsby-starter-blog/./src/templates/blog-post.tsx","webpack://gatsby-starter-blog/./src/utilFunction.ts"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport { mergePosts } from \"../utilFunction\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { ContentsListHeader, ContentsOrderedListWrapper } from \"../style\"\r\n\r\ntype RelatedListProps = {\r\n  slug: string\r\n  category: string\r\n  tags: string[]\r\n}\r\nconst RelatedList = ({ slug, category, tags }: RelatedListProps) => {\r\n  const { allMdx, allWpPost, allFile }: {allMdx: AllMdx, allWpPost: AllWpPost, allFile: AllFile} = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        allMdx(\r\n          sort: { frontmatter: { date: DESC } }\r\n        ) {\r\n          nodes {\r\n            excerpt\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              date(formatString: \"YYYY/MM/DD\")\r\n              description\r\n              featuredImagePath\r\n              category\r\n              tags\r\n            }\r\n          }\r\n        }\r\n        allWpPost(\r\n          sort: { date: DESC }\r\n        ) {\r\n          nodes {\r\n            title\r\n            excerpt\r\n            slug\r\n            date(formatString: \"YYYY/MM/DD\")\r\n            featuredImage{\r\n              node{\r\n                altText\r\n                gatsbyImage(\r\n                  width: 100,\r\n                  height: 100\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                  placeholder: BLURRED\r\n                )\r\n              }\r\n            }\r\n            categories {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n            tags {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n        allFile(\r\n          filter: {\r\n            sourceInstanceName: { eq: \"images\" }\r\n          }\r\n        ) {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  width: 100,\r\n                  height: 100\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                  placeholder: BLURRED\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  // 関連度計算。\r\n  const posts = mergePosts(allMdx, allWpPost, allFile).map(post => {\r\n    let point = 0\r\n    if (post.slug !== slug) {\r\n      // カテゴリの一致出力\r\n      if (post.category === category) point++;\r\n      // タグの一致出力。記事のタグの中に一致するものがあればtrueを返す。\r\n      for (const tag of tags) {\r\n        if (post.tags.includes(tag)) point += 2;\r\n      }\r\n    }\r\n    return { post: post, relevance: point }\r\n  })\r\n  .filter(r => r.relevance >= 2)\r\n  .sort((a, b) => a.relevance = b.relevance ? (a.post.date < b.post.date ? 1 : -1) : b.relevance - a.relevance)\r\n  .slice(0, 6).map(r => r.post)\r\n\r\n  if (!posts) return <></>\r\n\r\n  return (\r\n    <>\r\n      <ContentsListHeader>\r\n        <h2>関連記事</h2>\r\n      </ContentsListHeader>\r\n      <ContentsOrderedListWrapper>\r\n        {posts.map((post, index) => {\r\n          return (\r\n            <li key={post.slug}>\r\n              <article>\r\n                <Link to={post.slug}>\r\n                  <h2>\r\n                    <span>{post.title}</span>\r\n                  </h2>\r\n                  <section>\r\n                    <div><small>\r\n                      <time>{post.date}</time>\r\n                    </small></div>\r\n                    <div className=\"thumbnail\">\r\n                      {typeof post.gatsbyImage === \"undefined\" ||\r\n                        <GatsbyImage alt={post.altText} image={post.gatsbyImage} className=\"thumbnail\" />\r\n                      }\r\n                    </div>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: post.excerpt }}\r\n                    />\r\n                  </section>\r\n                </Link>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ContentsOrderedListWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RelatedList\r\n","import styled from \"styled-components\"\r\n\r\nexport const ContentsListHeader = styled.header`\r\n  text-align: center;\r\n\r\n  h1, h2 {\r\n    &:after {\r\n      margin: 0 auto;\r\n      content: '';\r\n      display: block;\r\n      width: 98%;\r\n      height: 3px;\r\n      background: var(--orange);\r\n    }\r\n  }\r\n`\r\n\r\nexport const ContentsOrderedListWrapper = styled.ol`\r\n  column-count: 1;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0 -15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: var(--maxWidth-full);\r\n\r\n  li {\r\n    padding: 5px;\r\n    margin: var(--spacing-1) ;\r\n    box-sizing: border-box;\r\n    border: 1px solid var(--black);\r\n    border-radius: 5px;\r\n\r\n    a {\r\n      color: var(--black);\r\n      text-decoration: none;\r\n    }\r\n\r\n    h2 {\r\n      font-size: var(--fontSize-2);\r\n    }\r\n  }\r\n  .thumbnail {\r\n    float: left;\r\n  }\r\n\r\n  @media screen and (min-width: 512px) {\r\n    column-count: 2;\r\n\r\n    li {\r\n      padding: 15px;\r\n      width: 48%;\r\n\r\n      h2 {\r\n        font-size: var(--fontSize-3);\r\n      }\r\n\r\n      a {\r\n        &:hover h2 {\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    column-count: 3;\r\n\r\n    li {\r\n      width: 32%;\r\n    }\r\n  }\r\n`","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport styled from \"styled-components\"\r\nimport { mergePost } from \"../utilFunction\"\r\nimport RelatedList from \"../components/related-list\"\r\n\r\ntype BlogPostTemplateProps = {\r\n  data: {\r\n    allFile: AllFile\r\n    mdx: MdxPost\r\n    mdPrevious: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n      }\r\n    }\r\n    mdNext: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n      }\r\n    }\r\n    wpPost: WpPost\r\n    wpPrevious: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n    }\r\n    wpNext: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n    }\r\n  }\r\n  location: Location\r\n  children: React.ReactNode\r\n}\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { allFile, mdx, mdPrevious, mdNext, wpPost, wpPrevious, wpNext },\r\n  location, children\r\n}: BlogPostTemplateProps) => {\r\n  const post = {\r\n    id: mdx?.id || wpPost?.id,\r\n    title: mdx?.frontmatter.title || wpPost?.title,\r\n    body: mdx?.body || wpPost?.content,\r\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\r\n    slug: mdx?.fields.slug || \"/\" + wpPost?.slug,\r\n    date: mdx?.frontmatter.date || wpPost?.date,\r\n    description: mdx?.frontmatter.description,\r\n    altText: wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage: wpPost?.featuredImage?.node.gatsbyImage || getImage(allFile.edges[0]?.node.childImageSharp),\r\n    category: mdx?.frontmatter.category || wpPost?.categories?.nodes[0]?.name,\r\n    tags: mdx?.frontmatter.tags || wpPost?.tags?.nodes.map(t => t.name),\r\n  }\r\n  const previous = {\r\n    id: mdPrevious?.id || wpPrevious?.id,\r\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\r\n    slug: mdPrevious?.fields.slug || \"/\" + wpPrevious?.slug,\r\n  }\r\n  const next = {\r\n    id: mdNext?.id || wpNext?.id,\r\n    title: mdNext?.frontmatter.title || wpNext?.title,\r\n    slug: mdNext?.fields.slug || \"/\" + wpNext?.slug,\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.title}</h1>\r\n          <p>\r\n            <div className=\"time\">\r\n              <small>\r\n                <time>{post.date}</time>\r\n              </small>\r\n            </div>\r\n          </p>\r\n        </header>\r\n        <div className=\"featuredImage\">\r\n          <GatsbyImage\r\n            image={post.gatsbyImage}\r\n            alt={post.title}\r\n          />\r\n        </div>\r\n        <Dl>\r\n          <dt>カテゴリ</dt>\r\n          <dd><Link to={`/category/${post.category}`}>{post.category}</Link></dd>\r\n        </Dl>\r\n        <Dl>\r\n          <dt>タグ</dt>\r\n          {post.tags.map((tag, index) => {\r\n            return <dd key={`tag${index}`}><Link to={`/tag/${tag}/`}>{tag}</Link></dd>\r\n          })}\r\n        </Dl>\r\n\r\n        <BlogEntry>\r\n          {children ||  // MDX or Wordpress content\r\n            <section\r\n              dangerouslySetInnerHTML={{ __html: post.body }}\r\n              itemProp=\"articleBody\"\r\n            />\r\n          }\r\n        </BlogEntry>\r\n        <hr />\r\n        <footer>\r\n        </footer>\r\n      </Article>\r\n      <BlogPostNav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.slug} rel=\"prev\">\r\n                ← {previous.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.slug} rel=\"next\">\r\n                {next.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </BlogPostNav>\r\n\r\n      <RelatedList slug={post.slug} category={post.category} tags={post.tags} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n    $imagePath: String\r\n  ) {\r\n    allFile(\r\n      filter: {\r\n        relativePath: { eq: $imagePath }\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 960\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    mdx(id: { eq: $id }) {\r\n      id\r\n      excerpt\r\n      body\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        description\r\n        category\r\n        tags\r\n      }\r\n      \r\n    }\r\n    mdPrevious: mdx(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    mdNext: mdx(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    wpPost(id: { eq: $id }) {\r\n      id\r\n      title\r\n      content\r\n      excerpt\r\n      slug\r\n      date(formatString: \"YYYY/MM/DD\")\r\n      featuredImage{\r\n        node{\r\n          altText\r\n          gatsbyImage(width: 960)\r\n        }\r\n      }\r\n      categories{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n      tags{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n    }\r\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\r\n      title\r\n      slug\r\n    }\r\n    wpNext: wpPost(id: { eq: $nextPostId }) {\r\n      title\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head = ({\r\n                       data: { allFile, mdx, wpPost },\r\n                       location\r\n                     }: BlogPostTemplateProps) => {\r\n  const post = mergePost(mdx, wpPost, allFile)\r\n  return (\r\n    <Seo\r\n      title={post.title}\r\n      description={post.excerpt}\r\n      location={location}\r\n      imagePath={post.gatsbyImage ? post.gatsbyImage.images.fallback?.src : null}\r\n      post={post}\r\n    />\r\n  )\r\n}\r\n\r\nconst Article = styled.article`\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n\r\n  .time {\r\n    text-align: right;\r\n  }\r\n\r\n  .featuredImage {\r\n    text-align: center;\r\n  }\r\n`\r\nconst BlogEntry = styled.div`\r\n  margin: 15px 0 30px;\r\n  border-top: 1px solid #ccc;\r\n  border-bottom: 1px solid #ccc;\r\n`\r\nconst BlogPostNav = styled.nav`\r\n  max-width: 750px;\r\n  margin: 0 auto;\r\n\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n  }\r\n`\r\nconst Dl = styled.dl`\r\n  display: flex;\r\n  margin: 0;\r\n\r\n  dt {\r\n    width: 80px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  dd {\r\n    font-size: 14px;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n\r\n    & + dd {\r\n      margin-left: 15px;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      border-radius: 3px;\r\n      color: #fff;\r\n      background: var(--orange);\r\n      padding: 2px 5px;\r\n\r\n      &:hover {\r\n        opacity: .5;\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nexport function mergePosts(allMdx: AllMdx, allWpPost: AllWpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  const mdxPosts = allMdx.nodes\r\n  const wpPosts = allWpPost.nodes\r\n  return mdxPosts.map(post => {\r\n    const mdx: CommonPost = {\r\n      title: post.frontmatter.title,\r\n      excerpt: post.excerpt,\r\n      slug: post.fields.slug,\r\n      date: post.frontmatter.date,\r\n      description: post.frontmatter.description,\r\n      altText: post.frontmatter.featuredImagePath,\r\n      gatsbyImage: getImage(allFeaturedImages[post.frontmatter.featuredImagePath || \"featured/defaultThumbnail.png\"]),\r\n      category: post.frontmatter.category || \"\",\r\n      tags: post.frontmatter.tags || []\r\n    }\r\n    return mdx\r\n  }).concat(wpPosts.map(post => {\r\n    return {\r\n      title: post.title,\r\n      excerpt: post.excerpt,\r\n      slug: \"/\" + post.slug,\r\n      date: post.date,\r\n      altText: post.featuredImage?.node.altText || \"\",\r\n      gatsbyImage: post.featuredImage?.node.gatsbyImage || getImage(allFeaturedImages[\"featured/defaultThumbnail.png\"]),\r\n      category: post.categories?.nodes[0]?.name || \"\",\r\n      tags: post.tags?.nodes.map(t => t.name) || []\r\n    }\r\n  })).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()) as CommonPost[]\r\n}\r\n\r\nexport function mergePost(mdx?: MdxPost, wpPost?: WpPost, allFile?: AllFile) {\r\n  let allFeaturedImages: { [key: string]: IGatsbyImageData } = {}\r\n  allFile && allFile.edges.forEach(node => {\r\n    allFeaturedImages[node.node.relativePath] = node.node.childImageSharp.gatsbyImageData\r\n  })\r\n  return {\r\n    title: mdx?.frontmatter.title || wpPost?.title,\r\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\r\n    slug: mdx?.fields.slug || \"/\" + wpPost?.slug,\r\n    date: mdx?.frontmatter.date || wpPost?.date,\r\n    description: mdx?.frontmatter.description || \"\",\r\n    altText: mdx?.frontmatter.featuredImagePath || wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage: getImage(allFeaturedImages[mdx?.frontmatter.featuredImagePath || \"featured/defaultThumbnail.webp\"])\r\n      || wpPost?.featuredImage?.node.gatsbyImage\r\n      || getImage(allFeaturedImages[\"featured/defaultThumbnail.webp\"])\r\n  } as CommonPost\r\n}\r\n"],"names":["_ref","slug","category","tags","allMdx","allWpPost","allFile","useStaticQuery","posts","mergePosts","map","post","point","tag","includes","relevance","filter","r","sort","a","b","date","slice","React","ContentsListHeader","ContentsOrderedListWrapper","index","key","Link","to","title","className","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","excerpt","styled","header","_templateObject","_taggedTemplateLiteralLoose","ol","_templateObject2","_wpPost$featuredImage","_wpPost$featuredImage2","_allFile$edges$","_wpPost$categories","_wpPost$categories$no","_wpPost$tags","data","mdx","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","children","id","frontmatter","body","content","fields","description","featuredImage","node","getImage","edges","childImageSharp","categories","nodes","name","t","previous","next","Layout","Article","itemScope","itemType","itemProp","Dl","BlogEntry","BlogPostNav","style","display","flexWrap","justifyContent","listStyle","padding","rel","RelatedList","Head","_ref2","_post$gatsbyImage$ima","mergePost","Seo","imagePath","images","fallback","src","article","div","nav","_templateObject3","dl","_templateObject4","allFeaturedImages","forEach","relativePath","gatsbyImageData","mdxPosts","wpPosts","featuredImagePath","concat","_post$featuredImage","_post$featuredImage2","_post$categories","_post$categories$node","_post$tags","Date","getTime"],"sourceRoot":""}