{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-example-index-mdx-4a1c35bde64857e80ddc.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/example/index.mdx","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is a post showing MDX in action. This starter now comes with MDX out-of-the-box!\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// you can write JSX in your Markdown!</span>\\r\\n<span class=\\\"token operator\\\">&lt;</span>button<span class=\\\"token operator\\\">></span>test<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(\"button\", null, \"test\"), \"\\n\", React.createElement(_components.h2, null, \"MDX\"), \"\\n\", React.createElement(_components.p, null, \"MDX lets you write JSX embedded inside markdown, perfect for technical blogs. MDX works with Gatsby through \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.org/packages/gatsby-plugin-mdx/\"\n  }, \"gatsby-plugin-mdx\"), \". You can learn more about it in the Gatsby docs: \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.org/docs/mdx/getting-started/\"\n  }, \"Getting Started with MDX\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/IP/sun0range.com/content/blog/example/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nconst BlogPostTemplate = ({data: {site, mdx, mdPrevious, mdNext, wpPost, wpPrevious, wpNext}, location, children}) => {\n  const post = {\n    id: mdx?.id || wpPost?.id,\n    title: mdx?.frontmatter.title || wpPost?.title,\n    body: mdx?.body || wpPost?.content,\n    excerpt: mdx?.excerpt || wpPost?.excerpt,\n    slug: mdx?.fields.slug || wpPost?.slug,\n    date: mdx?.frontmatter.date || wpPost?.date,\n    description: mdx?.frontmatter.description,\n    altText: wpPost?.featuredImage?.node.altText || \"\",\n    gatsbyImage: wpPost?.featuredImage?.node.gatsbyImage || null\n  };\n  const previous = {\n    id: mdPrevious?.id || wpPrevious?.id,\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\n    slug: mdPrevious?.fields.slug || wpPrevious?.slug\n  };\n  const next = {\n    id: mdNext?.id || wpNext?.id,\n    title: mdNext?.frontmatter.title || wpNext?.title,\n    slug: mdNext?.fields.slug || wpNext?.slug\n  };\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.title), React.createElement(\"p\", null, post.date)), children || React.createElement(\"section\", {\n    dangerouslySetInnerHTML: {\n      __html: post.body\n    },\n    itemProp: \"articleBody\"\n  }), React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.slug,\n    rel: \"prev\"\n  }, \"← \", previous.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.slug,\n    rel: \"next\"\n  }, next.title, \" →\")))));\n};\nexport const Head = ({data: {mdPost, wpPost}}) => {\n  const post = {\n    id: mdPost?.id || wpPost?.id,\n    title: mdPost?.frontmatter.title || wpPost?.title,\n    slug: mdPost?.fields.slug || wpPost?.slug\n  };\n  return React.createElement(Seo, {\n    title: post.title,\n    description: post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        description\n      }\n    }\n    mdPrevious: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    mdNext: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    wpPost(id: { eq: $id }) {\n      id\n      title\n      content\n      excerpt\n      slug\n      date(formatString: \"YYYY/MM/DD\")\n      featuredImage{\n        node{\n          altText\n          gatsbyImage(width: 960)\n        }\n      }\n    }\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\n      title\n      slug\n    }\n    wpNext: wpPost(id: { eq: $nextPostId }) {\n      title\n      slug\n    }\n  }\n`;\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h2","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","BlogPostTemplate","_ref","_wpPost$featuredImage","_wpPost$featuredImage2","data","site","mdx","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","children","post","id","title","frontmatter","body","content","excerpt","slug","fields","date","description","altText","featuredImage","node","gatsbyImage","previous","next","Layout","className","itemScope","itemType","itemProp","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","rel","Head","_ref2","mdPost","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_data$site$siteMetada","_data$site$siteMetada2","useStaticQuery","author","siteMetadata","social","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","summary","twitter","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}