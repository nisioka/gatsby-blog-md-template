{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-null-67cf0907a48eafce04e7.js","mappings":"wRAyKA,UA3GyBA,IAGI,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAF3BC,MAAM,QAAEC,EAASC,eAAgBC,EAAE,WAAEC,EAAU,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,OAAEC,GAAQ,SACrFC,GACsBlB,EACtB,MAAMmB,EAAO,CACXC,IAAIR,aAAE,EAAFA,EAAIQ,MAAML,aAAM,EAANA,EAAQK,IACtBC,OAAOT,aAAE,EAAFA,EAAIU,YAAYD,SAASN,aAAM,EAANA,EAAQM,OACxCE,SAASX,aAAE,EAAFA,EAAIY,QAAQT,aAAM,EAANA,EAAQQ,SAC7BE,SAASC,EAAAA,EAAAA,KAAed,aAAE,EAAFA,EAAIa,WAAWV,aAAM,EAANA,EAAQU,UAC/CE,MAAMf,aAAE,EAAFA,EAAIgB,OAAOD,KAAKE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,MACnD,KAAMd,aAAM,EAANA,EAAQY,MACnBG,MAAMlB,aAAE,EAAFA,EAAIU,YAAYQ,QAAQf,aAAM,EAANA,EAAQe,MACtCC,cAAcnB,aAAE,EAAFA,EAAIU,YAAYS,gBAAgBhB,aAAM,EAANA,EAAQiB,UACtDC,YAAarB,aAAE,EAAFA,EAAIU,YAAYW,YAC7BC,SAASnB,SAAqB,QAAfd,EAANc,EAAQoB,qBAAa,IAAAlC,OAAf,EAANA,EAAuBmC,KAAKF,UAAW,GAChDG,aAAatB,SAAqB,QAAfb,EAANa,EAAQoB,qBAAa,IAAAjC,OAAf,EAANA,EAAuBkC,KAAKC,eAAeC,EAAAA,EAAAA,GAAyB,QAAjBnC,EAACO,EAAQ6B,MAAM,UAAE,IAAApC,OAAA,EAAhBA,EAAkBiC,KAAKI,iBACxFC,UAAU7B,aAAE,EAAFA,EAAIU,YAAYmB,YAAY1B,SAAkB,QAAZX,EAANW,EAAQ2B,kBAAU,IAAAtC,GAAU,QAAVC,EAAlBD,EAAoBuC,MAAM,UAAE,IAAAtC,OAAtB,EAANA,EAA8BuC,MACpEC,MAAMjC,aAAE,EAAFA,EAAIU,YAAYuB,QAAQ9B,SAAY,QAANT,EAANS,EAAQ8B,YAAI,IAAAvC,OAAN,EAANA,EAAcqC,MAAMG,KAAIC,GAAKA,EAAEH,SAEzDI,EAAW,CACf5B,IAAIP,aAAU,EAAVA,EAAYO,MAAMJ,aAAU,EAAVA,EAAYI,IAClCC,OAAOR,aAAU,EAAVA,EAAYS,YAAYD,SAASL,aAAU,EAAVA,EAAYK,OACpDM,MAAMd,aAAU,EAAVA,EAAYe,OAAOD,KAAKE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAAOb,aAAU,EAAVA,EAAYW,MACnFc,UAAU5B,aAAU,EAAVA,EAAYS,YAAYmB,YAAYzB,aAAU,EAAVA,EAAY0B,WAAWC,MAAM,GAAGC,OAE1EK,EAAO,CACX7B,IAAIN,aAAM,EAANA,EAAQM,MAAMH,aAAM,EAANA,EAAQG,IAC1BC,OAAOP,aAAM,EAANA,EAAQQ,YAAYD,SAASJ,aAAM,EAANA,EAAQI,OAC5CM,MAAMb,aAAM,EAANA,EAAQc,OAAOD,KAAKE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAAOZ,aAAM,EAANA,EAAQU,MAC3Ec,UAAU3B,aAAM,EAANA,EAAQQ,YAAYmB,YAAYxB,SAAkB,QAAZV,EAANU,EAAQyB,kBAAU,IAAAnC,GAAU,QAAVC,EAAlBD,EAAoBoC,MAAM,UAAE,IAAAnC,OAAtB,EAANA,EAA8BoC,OAG1E,OACEM,EAAAA,cAACC,EAAAA,EAAM,CAACjC,SAAUA,GAChBgC,EAAAA,cAACE,EAAO,CACNC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETL,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIM,SAAS,YAAYrC,EAAKE,OAC9B6B,EAAAA,cAAA,SACEA,EAAAA,cAAA,OAAKG,UAAU,QACbH,EAAAA,cAAA,aACEA,EAAAA,cAAA,YAAO/B,EAAKW,UAKpBoB,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAACO,EAAAA,EAAW,CACVC,MAAOvC,EAAKkB,YACZsB,IAAKxC,EAAKE,SAGd6B,EAAAA,cAACU,EAAE,KACDV,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,UAAIA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,cAAaC,EAAAA,EAAAA,IAAgB5C,EAAKsB,aAActB,EAAKsB,YAErES,EAAAA,cAACU,EAAE,KACDV,EAAAA,cAAA,UAAI,MACH/B,EAAK0B,KAAKC,KAAI,CAACkB,EAAKC,IACZf,EAAAA,cAAA,MAAIgB,IAAK,MAAMD,KAASf,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,QAAQE,MAASA,OAI9Dd,EAAAA,cAACiB,EAAS,KACRjB,EAAAA,cAAA,WAASM,SAAS,gBACfY,EAAAA,EAAAA,IAAMjD,EAAKI,QAAS,CAACM,QAASwC,MAGnCnB,EAAAA,cAAA,WACAA,EAAAA,cAAA,gBAGFA,EAAAA,cAACoB,EAAW,CAACjB,UAAU,iBACrBH,EAAAA,cAAA,MACEqB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX1B,EAAAA,cAAA,UACGF,EAASrB,MACRuB,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,KAAIC,EAAAA,EAAAA,IAAgBf,EAASP,aAAaO,EAASrB,OAAQkD,IAAI,QAAO,KAC3E7B,EAAS3B,QAIlB6B,EAAAA,cAAA,UACGD,EAAKtB,MACJuB,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,KAAIC,EAAAA,EAAAA,IAAgBd,EAAKR,aAAaQ,EAAKtB,OAAQkD,IAAI,QAC9D5B,EAAK5B,MAAM,SAOtB6B,EAAAA,cAAC4B,EAAAA,EAAW,CAACnD,KAAMR,EAAKQ,KAAMc,SAAUtB,EAAKsB,SAAUI,KAAM1B,EAAK0B,OAC3D,EAMN,MA0GMkC,EAAOC,IAG8B,IAAAC,EAAA,IAF3BxE,MAAM,QAAEC,EAAO,eAAEC,EAAc,OAAEI,GAAQ,SACzCG,GACsB8D,EAC3C,MAAM7D,GAAO+D,EAAAA,EAAAA,IAAUvE,EAAgBI,EAAQL,GAC/C,OACEwC,EAAAA,cAACiC,EAAAA,EAAG,CACF9D,MAAOF,EAAKE,MACZY,YAAad,EAAKM,QAClBP,SAAUA,EACVkE,UAAWjE,EAAKkB,YAA8C,QAAnC4C,EAAG9D,EAAKkB,YAAYgD,OAAOC,gBAAQ,IAAAL,OAAA,EAAhCA,EAAkCM,IAAM,KACtEpE,KAAMA,GACN,EAIAkD,EAAejC,IACnB,IAAIA,EAAM,OAAOA,EACjB,GAAkB,QAAdA,EAAKQ,KAAgB,CACvB,MAAM4C,GAAMC,EAAAA,EAAAA,IAAWC,EAAQtD,IAC/B,IAAIuD,EAAS,GACb,cAAeH,GACb,IAAK,SACHG,EAASH,EACT,MACF,IAAK,SACH,GAAGI,MAAMC,QAAQL,GAAM,CAENA,EACR1C,KAAIgD,IACLA,EAAIC,OAASD,EAAIC,MAAMC,WACzBL,GAAWG,EAAIC,MAAMC,SACvB,GAEJ,KAAO,CAEL,MAAMF,EAAMN,EACRM,EAAIC,OAASD,EAAIC,MAAMC,WACzBL,EAAUG,EAAIC,MAAMC,SAExB,EAIJ,OAAO5D,EAAK4D,SAASC,OAAS,GAC5B/C,EAAAA,cAACgD,EAAe,CAACC,SAAUC,EAAYhE,IACpCuD,EAEP,GAGIO,EAAkBG,IAAA,IAAC,SAACF,EAAQ,SAAEH,GAAkDK,EAAA,OACpFnD,EAAAA,cAACoD,EAAAA,EAAiB,CAAC/B,MAAOgC,EAAAA,GAAUJ,SAAUA,EAAUK,iBAAiB,GACtER,EACiB,EAGhBI,EAAehE,IACnBqE,QAAQC,IAAItE,GACRA,EAAKuE,QAAQC,OAAgC,kBAAvBxE,EAAKuE,QAAQC,MAC7BxE,EAAKuE,QAAQC,MAAiB/E,QAAQ,YAAa,IAClDO,EAAK4D,SAAS,GAAGW,QAAQC,MAC1BxE,EAAK4D,SAAS,GAAGW,QAAQC,MAAiB/E,QAAQ,YAAa,IAElE,QAGH6D,EAAWtD,GACXA,EAAK4D,SAASC,OAAS,GAA+B,SAA1B7D,EAAK4D,SAAS,GAAGpD,KACxCR,EAAK4D,SAAS,GAAGA,SAEjB5D,EAAK4D,SAIV5C,EAAUyD,EAAAA,GAAOC,OAAO;;;;;;;;;;;EAYxB3C,EAAY0C,EAAAA,GAAOE,GAAG;;;;EAKtBzC,EAAcuC,EAAAA,GAAOG,GAAG;;;;;;;;EASxBpD,EAAKiD,EAAAA,GAAOI,EAAE","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport styled from \"styled-components\"\r\nimport { convertCategory, mergePost, removeHtmlTags } from \"../utilFunction\"\r\nimport RelatedList from \"../components/related-list\"\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport parse, { domToReact } from \"html-react-parser\"\r\nimport { ghcolors } from \"react-syntax-highlighter/dist/cjs/styles/prism\"\r\n\r\ntype BlogPostTemplateProps = {\r\n  data: {\r\n    allFile: AllFile\r\n    markdownRemark: MdPost\r\n    mdPrevious: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n        category: string\r\n      }\r\n    }\r\n    mdNext: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n        category: string\r\n      }\r\n    }\r\n    wpPost: WpPost\r\n    wpPrevious: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n      categories: {\r\n        nodes: {\r\n          name: string\r\n        }[]\r\n      }\r\n    }\r\n    wpNext: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n      categories: {\r\n        nodes: {\r\n          name: string\r\n        }[]\r\n      }\r\n    }\r\n  }\r\n  location: Location\r\n}\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { allFile, markdownRemark: md, mdPrevious, mdNext, wpPost, wpPrevious, wpNext },\r\n  location\r\n}: BlogPostTemplateProps) => {\r\n  const post = {\r\n    id: md?.id || wpPost?.id,\r\n    title: md?.frontmatter.title || wpPost?.title,\r\n    content: md?.html || wpPost?.content,\r\n    excerpt: removeHtmlTags(md?.excerpt || wpPost?.excerpt),\r\n    slug: md?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\")\r\n      || \"/\" + wpPost?.slug,\r\n    date: md?.frontmatter.date || wpPost?.date,\r\n    dateModified: md?.frontmatter.dateModified || wpPost?.modified,\r\n    description: md?.frontmatter.description,\r\n    altText: wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage: wpPost?.featuredImage?.node.gatsbyImage || getImage(allFile.edges[0]?.node.childImageSharp),\r\n    category: md?.frontmatter.category || wpPost?.categories?.nodes[0]?.name,\r\n    tags: md?.frontmatter.tags || wpPost?.tags?.nodes.map(t => t.name),\r\n  }\r\n  const previous = {\r\n    id: mdPrevious?.id || wpPrevious?.id,\r\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\r\n    slug: mdPrevious?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") || wpPrevious?.slug,\r\n    category: mdPrevious?.frontmatter.category || wpPrevious?.categories.nodes[0].name\r\n  }\r\n  const next = {\r\n    id: mdNext?.id || wpNext?.id,\r\n    title: mdNext?.frontmatter.title || wpNext?.title,\r\n    slug: mdNext?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") || wpNext?.slug,\r\n    category: mdNext?.frontmatter.category || wpNext?.categories?.nodes[0]?.name\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.title}</h1>\r\n          <p>\r\n            <div className=\"time\">\r\n              <small>\r\n                <time>{post.date}</time>\r\n              </small>\r\n            </div>\r\n          </p>\r\n        </header>\r\n        <div className=\"featuredImage\">\r\n          <GatsbyImage\r\n            image={post.gatsbyImage}\r\n            alt={post.title}\r\n          />\r\n        </div>\r\n        <Dl>\r\n          <dt>カテゴリ</dt>\r\n          <dd><Link to={`/category/${convertCategory(post.category)}`}>{post.category}</Link></dd>\r\n        </Dl>\r\n        <Dl>\r\n          <dt>タグ</dt>\r\n          {post.tags.map((tag, index) => {\r\n            return <dd key={`tag${index}`}><Link to={`/tag/${tag}/`}>{tag}</Link></dd>\r\n          })}\r\n        </Dl>\r\n\r\n        <BlogEntry>\r\n          <section itemProp=\"articleBody\">\r\n            {parse(post.content, {replace: replaceCode})}\r\n          </section>\r\n        </BlogEntry>\r\n        <hr />\r\n        <footer>\r\n        </footer>\r\n      </Article>\r\n      <BlogPostNav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0\r\n          }}\r\n        >\r\n          <li>\r\n            {previous.slug && (\r\n              <Link to={`/${convertCategory(previous.category)}/${previous.slug}`} rel=\"prev\">\r\n                ← {previous.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next.slug && (\r\n              <Link to={`/${convertCategory(next.category)}/${next.slug}`} rel=\"next\">\r\n                {next.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </BlogPostNav>\r\n\r\n      <RelatedList slug={post.slug} category={post.category} tags={post.tags} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n    $imagePath: String\r\n  ) {\r\n    allFile(\r\n      filter: {\r\n        relativePath: { eq: $imagePath }\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              height: 320\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        dateModified(formatString: \"YYYY/MM/DD\")\r\n        description\r\n        category\r\n        tags\r\n      }\r\n      \r\n    }\r\n    mdPrevious: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        category\r\n      }\r\n    }\r\n    mdNext: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        category\r\n      }\r\n    }\r\n    wpPost(id: { eq: $id }) {\r\n      id\r\n      title\r\n      content\r\n      excerpt\r\n      slug\r\n      date(formatString: \"YYYY/MM/DD\")\r\n      modified(formatString: \"YYYY/MM/DD\")\r\n      featuredImage{\r\n        node{\r\n          altText\r\n          gatsbyImage(height: 320)\r\n        }\r\n      }\r\n      categories{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n      tags{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n    }\r\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\r\n      title\r\n      slug\r\n      categories{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n    }\r\n    wpNext: wpPost(id: { eq: $nextPostId }) {\r\n      title\r\n      slug\r\n      categories{\r\n        nodes{\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head = ({\r\n                       data: { allFile, markdownRemark, wpPost },\r\n                       location\r\n                     }: BlogPostTemplateProps) => {\r\n  const post = mergePost(markdownRemark, wpPost, allFile)\r\n  return (\r\n    <Seo\r\n      title={post.title}\r\n      description={post.excerpt}\r\n      location={location}\r\n      imagePath={post.gatsbyImage ? post.gatsbyImage.images.fallback?.src : null}\r\n      post={post}\r\n    />\r\n  )\r\n}\r\n\r\nconst replaceCode = (node: any) => {\r\n  if(!node) return node;\r\n  if (node.name === 'pre') {\r\n    const dom = domToReact(getCode(node))\r\n    let result = \"\";\r\n    switch (typeof dom) {\r\n      case 'string':\r\n        result = dom as string\r\n        break;\r\n      case 'object':\r\n        if(Array.isArray(dom)) {\r\n          // React.JSX.Element[]\r\n          const elmArr = dom as React.JSX.Element[];\r\n          elmArr.map(elm => {\r\n            if (elm.props && elm.props.children) {\r\n              result += (elm.props.children as string);\r\n            }\r\n          })\r\n        } else {\r\n          // React.JSX.Element\r\n          const elm = dom as React.JSX.Element;\r\n          if (elm.props && elm.props.children) {\r\n            result = (elm.props.children as string);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n\r\n    return node.children.length > 0 &&\r\n      <SyntaxHighlight language={getLanguage(node)}>\r\n        {result}\r\n      </SyntaxHighlight>;\r\n  }\r\n};\r\n\r\nconst SyntaxHighlight = ({language, children }: { language: string, children: string }) => (\r\n  <SyntaxHighlighter style={ghcolors} language={language} showLineNumbers={true}>\r\n    {children}\r\n  </SyntaxHighlighter>\r\n);\r\n\r\nconst getLanguage = (node: any) => {\r\n  console.log(node)\r\n  if (node.attribs.class && node.attribs.class !== \"wp-block-code\") {\r\n    return (node.attribs.class as string).replace(\"language-\", \"\");\r\n  } else if (node.children[0].attribs.class) {\r\n    return (node.children[0].attribs.class as string).replace(\"language-\", \"\");\r\n  }\r\n  return \"java\"; // default\r\n};\r\n\r\nconst getCode = (node: any) => {\r\n  if (node.children.length > 0 && node.children[0].name === 'code') {\r\n    return node.children[0].children;\r\n  } else {\r\n    return node.children;\r\n  }\r\n};\r\n\r\nconst Article = styled.article`\r\n  margin: 0 auto;\r\n  background-color: #fff;\r\n\r\n  .time {\r\n    text-align: right;\r\n  }\r\n\r\n  .featuredImage {\r\n    text-align: center;\r\n  }\r\n`\r\nconst BlogEntry = styled.div`\r\n  margin: 15px 0 30px;\r\n  border-top: 1px solid #ccc;\r\n  border-bottom: 1px solid #ccc;\r\n`\r\nconst BlogPostNav = styled.nav`\r\n  margin: 0 auto;\r\n\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n  }\r\n`\r\nconst Dl = styled.dl`\r\n  display: flex;\r\n  margin: 0;\r\n\r\n  dt {\r\n    width: 80px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  dd {\r\n    font-size: 14px;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n\r\n    & + dd {\r\n      margin-left: 15px;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      border-radius: 3px;\r\n      color: #fff;\r\n      background: var(--orange);\r\n      padding: 2px 5px;\r\n\r\n      &:hover {\r\n        opacity: .5;\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","_wpPost$featuredImage","_wpPost$featuredImage2","_allFile$edges$","_wpPost$categories","_wpPost$categories$no","_wpPost$tags","_wpNext$categories","_wpNext$categories$no","data","allFile","markdownRemark","md","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","post","id","title","frontmatter","content","html","excerpt","removeHtmlTags","slug","fields","replace","date","dateModified","modified","description","altText","featuredImage","node","gatsbyImage","getImage","edges","childImageSharp","category","categories","nodes","name","tags","map","t","previous","next","React","Layout","Article","className","itemScope","itemType","itemProp","GatsbyImage","image","alt","Dl","Link","to","convertCategory","tag","index","key","BlogEntry","parse","replaceCode","BlogPostNav","style","display","flexWrap","justifyContent","listStyle","padding","rel","RelatedList","Head","_ref2","_post$gatsbyImage$ima","mergePost","Seo","imagePath","images","fallback","src","dom","domToReact","getCode","result","Array","isArray","elm","props","children","length","SyntaxHighlight","language","getLanguage","_ref3","SyntaxHighlighter","ghcolors","showLineNumbers","console","log","attribs","class","styled","article","div","nav","dl"],"sourceRoot":""}